{"version":3,"file":"tswebpack-main.min.js","mappings":"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","sources":["webpack://tswebpack/webpack/runtime/chunk loaded","webpack://tswebpack/./src/cjs/DirectGeometry.js","webpack://tswebpack/./src/cjs/Face3.js","webpack://tswebpack/./src/cjs/Gmetry.js","webpack://tswebpack/./src/cjs/entry.js","webpack://tswebpack/./src/cjs/index.js","webpack://tswebpack/./src/cjs/interfaces.js","webpack://tswebpack/webpack/bootstrap","webpack://tswebpack/webpack/runtime/hasOwnProperty shorthand","webpack://tswebpack/webpack/runtime/jsonp chunk loading","webpack://tswebpack/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","\"use strict\";\n/**\n * THE ORIGINAL SOURCE COOE IS HERE:\n *    https://github.com/mrdoob/three.js/blob/dev/examples/jsm/deprecated/Geometry.js\n *\n * This is a backport of the old (deprecated) THREE.DirectGeometry class.\n *\n * It got deprecated in version r125 and was announced to be completely dropped in future versions.\n *\n * As it was a very useful class I wanted to preserve it for some of my projects which depend on it.\n *\n * And here this is a Typescript port, too. Enjoy!\n *    - Ikaros Kappler\n *\n * @date 2022-02-11\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DirectGeometry = void 0;\n//  import * as THREE from \"three\";\nvar three_1 = require(\"three\");\nvar DirectGeometry = /** @class */ (function () {\n    function DirectGeometry() {\n        this.vertices = [];\n        this.normals = [];\n        this.colors = [];\n        this.uvs = [];\n        this.uvs2 = [];\n        this.groups = [];\n        this.morphTargets = { position: null, normal: null };\n        this.skinWeights = [];\n        this.skinIndices = [];\n        // this.lineDistances = [];\n        this.boundingBox = null;\n        this.boundingSphere = null;\n        // update flags\n        this.verticesNeedUpdate = false;\n        this.normalsNeedUpdate = false;\n        this.colorsNeedUpdate = false;\n        this.uvsNeedUpdate = false;\n        this.groupsNeedUpdate = false;\n    }\n    DirectGeometry.prototype.computeGroups = function (geometry) {\n        var groups = [];\n        var group, i;\n        var materialIndex = undefined;\n        var faces = geometry.faces;\n        for (i = 0; i < faces.length; i++) {\n            var face = faces[i];\n            // materials\n            if (face.materialIndex !== materialIndex) {\n                materialIndex = face.materialIndex;\n                if (group !== undefined) {\n                    group.count = (i * 3) - group.start;\n                    groups.push(group);\n                }\n                group = {\n                    start: i * 3,\n                    materialIndex: materialIndex\n                };\n            }\n        }\n        if (group !== undefined) {\n            group.count = (i * 3) - group.start;\n            groups.push(group);\n        }\n        this.groups = groups;\n    };\n    DirectGeometry.prototype.fromGeometry = function (geometry) {\n        var faces = geometry.faces;\n        var vertices = geometry.vertices;\n        var faceVertexUvs = geometry.faceVertexUvs;\n        var hasFaceVertexUv = faceVertexUvs[0] && faceVertexUvs[0].length > 0;\n        var hasFaceVertexUv2 = faceVertexUvs[1] && faceVertexUvs[1].length > 0;\n        // morphs\n        var morphTargets = geometry.morphTargets;\n        var morphTargetsLength = morphTargets.length;\n        var morphTargetsPosition;\n        if (morphTargetsLength > 0) {\n            morphTargetsPosition = [];\n            for (var i = 0; i < morphTargetsLength; i++) {\n                morphTargetsPosition[i] = {\n                    name: morphTargets[i].name,\n                    data: []\n                };\n            }\n            this.morphTargets.position = morphTargetsPosition;\n        }\n        var morphNormals = geometry.morphNormals;\n        var morphNormalsLength = morphNormals.length;\n        var morphTargetsNormal;\n        if (morphNormalsLength > 0) {\n            morphTargetsNormal = [];\n            for (var i = 0; i < morphNormalsLength; i++) {\n                morphTargetsNormal[i] = {\n                    name: morphNormals[i].name,\n                    data: []\n                };\n            }\n            this.morphTargets.normal = morphTargetsNormal;\n        }\n        // skins\n        var skinIndices = geometry.skinIndices;\n        var skinWeights = geometry.skinWeights;\n        var hasSkinIndices = skinIndices.length === vertices.length;\n        var hasSkinWeights = skinWeights.length === vertices.length;\n        //\n        if (vertices.length > 0 && faces.length === 0) {\n            console.error('THREE.DirectGeometry: Faceless geometries are not supported.');\n        }\n        for (var i = 0; i < faces.length; i++) {\n            var face = faces[i];\n            this.vertices.push(vertices[face.a], vertices[face.b], vertices[face.c]);\n            var vertexNormals = face.vertexNormals;\n            if (vertexNormals.length === 3) {\n                this.normals.push(vertexNormals[0], vertexNormals[1], vertexNormals[2]);\n            }\n            else {\n                var normal = face.normal;\n                this.normals.push(normal, normal, normal);\n            }\n            var vertexColors = face.vertexColors;\n            if (vertexColors.length === 3) {\n                this.colors.push(vertexColors[0], vertexColors[1], vertexColors[2]);\n            }\n            else {\n                var color = face.color;\n                this.colors.push(color, color, color);\n            }\n            if (hasFaceVertexUv === true) {\n                var vertexUvs = faceVertexUvs[0][i];\n                if (vertexUvs !== undefined) {\n                    this.uvs.push(vertexUvs[0], vertexUvs[1], vertexUvs[2]);\n                }\n                else {\n                    console.warn('THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i);\n                    this.uvs.push(new three_1.Vector2(), new three_1.Vector2(), new three_1.Vector2());\n                }\n            }\n            if (hasFaceVertexUv2 === true) {\n                var vertexUvs = faceVertexUvs[1][i];\n                if (vertexUvs !== undefined) {\n                    this.uvs2.push(vertexUvs[0], vertexUvs[1], vertexUvs[2]);\n                }\n                else {\n                    console.warn('THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i);\n                    this.uvs2.push(new three_1.Vector2(), new three_1.Vector2(), new three_1.Vector2());\n                }\n            }\n            // morphs\n            for (var j = 0; j < morphTargetsLength; j++) {\n                var morphTarget = morphTargets[j].vertices;\n                morphTargetsPosition[j].data.push(morphTarget[face.a], morphTarget[face.b], morphTarget[face.c]);\n            }\n            for (var j = 0; j < morphNormalsLength; j++) {\n                var morphNormal = morphNormals[j].vertexNormals[i];\n                morphTargetsNormal[j].data.push(morphNormal.a, morphNormal.b, morphNormal.c);\n            }\n            // skins\n            if (hasSkinIndices) {\n                this.skinIndices.push(skinIndices[face.a], skinIndices[face.b], skinIndices[face.c]);\n            }\n            if (hasSkinWeights) {\n                this.skinWeights.push(skinWeights[face.a], skinWeights[face.b], skinWeights[face.c]);\n            }\n        }\n        this.computeGroups(geometry);\n        this.verticesNeedUpdate = geometry.verticesNeedUpdate;\n        this.normalsNeedUpdate = geometry.normalsNeedUpdate;\n        this.colorsNeedUpdate = geometry.colorsNeedUpdate;\n        this.uvsNeedUpdate = geometry.uvsNeedUpdate;\n        this.groupsNeedUpdate = geometry.groupsNeedUpdate;\n        if (geometry.boundingSphere !== null) {\n            this.boundingSphere = geometry.boundingSphere.clone();\n        }\n        if (geometry.boundingBox !== null) {\n            this.boundingBox = geometry.boundingBox.clone();\n        }\n        return this;\n    };\n    return DirectGeometry;\n}());\nexports.DirectGeometry = DirectGeometry;\n//# sourceMappingURL=DirectGeometry.js.map","\"use strict\";\n/**\n * THE ORIGINAL SOURCE COOE IS HERE:\n *    https://github.com/mrdoob/three.js/blob/dev/examples/jsm/deprecated/Geometry.js\n *\n * This is a backport of the old (deprecated) THREE.Face3 class.\n *\n * It got deprecated in version r125 and was announced to be completely dropped in future versions.\n *\n * As it was a very useful class I wanted to preserve it for some of my projects which depend on it.\n *\n * And here this is a Typescript port, too. Enjoy!\n *    - Ikaros Kappler\n *\n * @date 2022-02-11\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Face3 = void 0;\n// TODO: only import required types\n// import * as THREE from \"three\";\nvar three_1 = require(\"three\");\nvar Face3 = /** @class */ (function () {\n    function Face3(a, b, c, normal, color, materialIndex) {\n        if (materialIndex === void 0) { materialIndex = 0; }\n        this.a = a;\n        this.b = b;\n        this.c = c;\n        // this.normal = ( normal && normal.isVector3 ) ? normal : new THREE.Vector3();\n        // this.vertexNormals = Array.isArray( normal ) ? normal : [];\n        // TODO: verify correctness\n        this.normal = (normal && (normal instanceof three_1.Vector3 && normal.isVector3)) ? normal : new three_1.Vector3();\n        this.vertexNormals = Array.isArray(normal) ? normal : [];\n        // this.color = ( color && color.isColor ) ? color : new THREE.Color();\n        this.color = (color && (color instanceof three_1.Color && color.isColor)) ? color : new three_1.Color(); // TODO: verify correctness\n        this.vertexColors = Array.isArray(color) ? color : [];\n        this.materialIndex = materialIndex;\n    }\n    Face3.prototype.clone = function () {\n        // TODO: check if new expression is correct\n        // return new this.constructor().copy( this );\n        return new Face3(this.a, this.b, this.c, this.normal.clone(), this.color.clone(), this.materialIndex).copy(this);\n    };\n    Face3.prototype.copy = function (source) {\n        this.a = source.a;\n        this.b = source.b;\n        this.c = source.c;\n        this.normal.copy(source.normal);\n        this.color.copy(source.color);\n        this.materialIndex = source.materialIndex;\n        for (var i = 0, il = source.vertexNormals.length; i < il; i++) {\n            this.vertexNormals[i] = source.vertexNormals[i].clone();\n        }\n        for (var i = 0, il = source.vertexColors.length; i < il; i++) {\n            this.vertexColors[i] = source.vertexColors[i].clone();\n        }\n        return this;\n    };\n    return Face3;\n}());\nexports.Face3 = Face3;\n//# sourceMappingURL=Face3.js.map","\"use strict\";\n/**\n * THE ORIGINAL SOURCE COOE IS HERE:\n *    https://github.com/mrdoob/three.js/blob/dev/examples/jsm/deprecated/Geometry.js\n *\n * This is a backport of the old (deprecated) THREE.Geometry class.\n *\n * It got deprecated in version r125 and was announced to be completely dropped in future versions.\n *\n * As it was a very useful class I wanted to preserve it for some of my projects which depend on it.\n *\n * And here this is a Typescript port, too. Enjoy!\n *    - Ikaros Kappler\n *\n * @date 2022-02-11\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Gmetry = void 0;\nvar three_1 = require(\"three\");\nvar DirectGeometry_1 = require(\"./DirectGeometry\");\nvar Face3_1 = require(\"./Face3\");\nvar _m1 = new three_1.Matrix4();\nvar _obj = new three_1.Object3D();\nvar _offset = new three_1.Vector3();\n// this.faceVertexUvs[0].push([\n//     new THREE.Vector2(0.0, ratioJ),\n//     new THREE.Vector2(0.0, ratioI),\n//     new THREE.Vector2(1.0, ratioJ)\n//   ]);\n//   this.faceVertexUvs[0].push([\n//     new THREE.Vector2(0.0, ratioI),\n//     new THREE.Vector2(1.0, ratioI),\n//     new THREE.Vector2(1.0, ratioJ)\n//   ]);\nvar Gmetry = /** @class */ (function (_super) {\n    __extends(Gmetry, _super);\n    function Gmetry() {\n        var _this = _super.call(this) || this;\n        _this.uuid = three_1.MathUtils.generateUUID();\n        _this.name = '';\n        _this.type = 'Geometry';\n        _this.vertices = [];\n        _this.colors = [];\n        _this.faces = [];\n        _this.faceVertexUvs = [[]];\n        _this.morphTargets = [];\n        _this.morphNormals = [];\n        _this.skinWeights = [];\n        _this.skinIndices = [];\n        _this.lineDistances = [];\n        _this.boundingBox = null;\n        _this.boundingSphere = null;\n        // update flags\n        _this.elementsNeedUpdate = false;\n        _this.verticesNeedUpdate = false;\n        _this.uvsNeedUpdate = false;\n        _this.normalsNeedUpdate = false;\n        _this.colorsNeedUpdate = false;\n        _this.lineDistancesNeedUpdate = false;\n        _this.groupsNeedUpdate = false;\n        // Added this line as 'prototype' is not really accessed in Typescript\n        _this.isGeometry = true;\n        return _this;\n    }\n    Gmetry.prototype.applyMatrix4 = function (matrix) {\n        var normalMatrix = new three_1.Matrix3().getNormalMatrix(matrix);\n        for (var i = 0, il = this.vertices.length; i < il; i++) {\n            var vertex = this.vertices[i];\n            vertex.applyMatrix4(matrix);\n        }\n        for (var i = 0, il = this.faces.length; i < il; i++) {\n            var face = this.faces[i];\n            face.normal.applyMatrix3(normalMatrix).normalize();\n            for (var j = 0, jl = face.vertexNormals.length; j < jl; j++) {\n                face.vertexNormals[j].applyMatrix3(normalMatrix).normalize();\n            }\n        }\n        if (this.boundingBox !== null) {\n            this.computeBoundingBox();\n        }\n        if (this.boundingSphere !== null) {\n            this.computeBoundingSphere();\n        }\n        this.verticesNeedUpdate = true;\n        this.normalsNeedUpdate = true;\n        return this;\n    };\n    Gmetry.prototype.rotateX = function (angle) {\n        // rotate geometry around world x-axis\n        _m1.makeRotationX(angle);\n        this.applyMatrix4(_m1);\n        return this;\n    };\n    Gmetry.prototype.rotateY = function (angle) {\n        // rotate geometry around world y-axis\n        _m1.makeRotationY(angle);\n        this.applyMatrix4(_m1);\n        return this;\n    };\n    Gmetry.prototype.rotateZ = function (angle) {\n        // rotate geometry around world z-axis\n        _m1.makeRotationZ(angle);\n        this.applyMatrix4(_m1);\n        return this;\n    };\n    Gmetry.prototype.translate = function (x, y, z) {\n        // translate geometry\n        _m1.makeTranslation(x, y, z);\n        this.applyMatrix4(_m1);\n        return this;\n    };\n    Gmetry.prototype.scale = function (x, y, z) {\n        // scale geometry\n        _m1.makeScale(x, y, z);\n        this.applyMatrix4(_m1);\n        return this;\n    };\n    Gmetry.prototype.lookAt = function (vector) {\n        _obj.lookAt(vector);\n        _obj.updateMatrix();\n        this.applyMatrix4(_obj.matrix);\n        return this;\n    };\n    Gmetry.prototype.fromBufferGeometry = function (geometry) {\n        var scope = this;\n        var index = geometry.index !== null ? geometry.index : undefined;\n        var attributes = geometry.attributes;\n        if (attributes.position === undefined) {\n            console.error('THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion.');\n            return this;\n        }\n        var position = attributes.position;\n        var normal = attributes.normal;\n        var color = attributes.color;\n        var uv = attributes.uv;\n        var uv2 = attributes.uv2;\n        if (uv2 !== undefined)\n            this.faceVertexUvs[1] = [];\n        for (var i = 0; i < position.count; i++) {\n            scope.vertices.push(new three_1.Vector3().fromBufferAttribute(position, i));\n            if (color !== undefined) {\n                scope.colors.push(new three_1.Color().fromBufferAttribute(color, i));\n            }\n        }\n        function addFace(a, b, c, materialIndex) {\n            var vertexColors = (color === undefined) ? [] : [\n                scope.colors[a].clone(),\n                scope.colors[b].clone(),\n                scope.colors[c].clone()\n            ];\n            var vertexNormals = (normal === undefined) ? [] : [\n                new three_1.Vector3().fromBufferAttribute(normal, a),\n                new three_1.Vector3().fromBufferAttribute(normal, b),\n                new three_1.Vector3().fromBufferAttribute(normal, c)\n            ];\n            var face = new Face3_1.Face3(a, b, c, vertexNormals, vertexColors, materialIndex);\n            scope.faces.push(face);\n            if (uv !== undefined) {\n                scope.faceVertexUvs[0].push([\n                    new three_1.Vector2().fromBufferAttribute(uv, a),\n                    new three_1.Vector2().fromBufferAttribute(uv, b),\n                    new three_1.Vector2().fromBufferAttribute(uv, c)\n                ]);\n            }\n            if (uv2 !== undefined) {\n                scope.faceVertexUvs[1].push([\n                    new three_1.Vector2().fromBufferAttribute(uv2, a),\n                    new three_1.Vector2().fromBufferAttribute(uv2, b),\n                    new three_1.Vector2().fromBufferAttribute(uv2, c)\n                ]);\n            }\n        }\n        var groups = geometry.groups;\n        if (groups.length > 0) {\n            for (var i = 0; i < groups.length; i++) {\n                var group = groups[i];\n                var start = group.start;\n                var count = group.count;\n                for (var j = start, jl = start + count; j < jl; j += 3) {\n                    if (index !== undefined) {\n                        addFace(index.getX(j), index.getX(j + 1), index.getX(j + 2), group.materialIndex);\n                    }\n                    else {\n                        addFace(j, j + 1, j + 2, group.materialIndex);\n                    }\n                }\n            }\n        }\n        else {\n            if (index !== undefined) {\n                for (var i = 0; i < index.count; i += 3) {\n                    addFace(index.getX(i), index.getX(i + 1), index.getX(i + 2));\n                }\n            }\n            else {\n                for (var i = 0; i < position.count; i += 3) {\n                    addFace(i, i + 1, i + 2);\n                }\n            }\n        }\n        this.computeFaceNormals();\n        if (geometry.boundingBox !== null) {\n            this.boundingBox = geometry.boundingBox.clone();\n        }\n        if (geometry.boundingSphere !== null) {\n            this.boundingSphere = geometry.boundingSphere.clone();\n        }\n        return this;\n    };\n    Gmetry.prototype.center = function () {\n        this.computeBoundingBox();\n        this.boundingBox.getCenter(_offset).negate();\n        this.translate(_offset.x, _offset.y, _offset.z);\n        return this;\n    };\n    Gmetry.prototype.normalize = function () {\n        this.computeBoundingSphere();\n        var center = this.boundingSphere.center;\n        var radius = this.boundingSphere.radius;\n        var s = radius === 0 ? 1 : 1.0 / radius;\n        var matrix = new three_1.Matrix4();\n        matrix.set(s, 0, 0, -s * center.x, 0, s, 0, -s * center.y, 0, 0, s, -s * center.z, 0, 0, 0, 1);\n        this.applyMatrix4(matrix);\n        return this;\n    };\n    Gmetry.prototype.computeFaceNormals = function () {\n        var cb = new three_1.Vector3(), ab = new three_1.Vector3();\n        for (var f = 0, fl = this.faces.length; f < fl; f++) {\n            var face = this.faces[f];\n            var vA = this.vertices[face.a];\n            var vB = this.vertices[face.b];\n            var vC = this.vertices[face.c];\n            cb.subVectors(vC, vB);\n            ab.subVectors(vA, vB);\n            cb.cross(ab);\n            cb.normalize();\n            face.normal.copy(cb);\n        }\n    };\n    Gmetry.prototype.computeVertexNormals = function (areaWeighted) {\n        if (areaWeighted === void 0) { areaWeighted = true; }\n        var vertices = new Array(this.vertices.length);\n        for (var v = 0, vl = this.vertices.length; v < vl; v++) {\n            vertices[v] = new three_1.Vector3();\n        }\n        if (areaWeighted) {\n            // vertex normals weighted by triangle areas\n            // http://www.iquilezles.org/www/articles/normals/normals.htm\n            var cb = new three_1.Vector3(), ab = new three_1.Vector3();\n            for (var f = 0, fl = this.faces.length; f < fl; f++) {\n                var face = this.faces[f];\n                var vA = this.vertices[face.a];\n                var vB = this.vertices[face.b];\n                var vC = this.vertices[face.c];\n                cb.subVectors(vC, vB);\n                ab.subVectors(vA, vB);\n                cb.cross(ab);\n                vertices[face.a].add(cb);\n                vertices[face.b].add(cb);\n                vertices[face.c].add(cb);\n            }\n        }\n        else {\n            this.computeFaceNormals();\n            for (var f = 0, fl = this.faces.length; f < fl; f++) {\n                var face = this.faces[f];\n                vertices[face.a].add(face.normal);\n                vertices[face.b].add(face.normal);\n                vertices[face.c].add(face.normal);\n            }\n        }\n        for (var v = 0, vl = this.vertices.length; v < vl; v++) {\n            vertices[v].normalize();\n        }\n        for (var f = 0, fl = this.faces.length; f < fl; f++) {\n            var face = this.faces[f];\n            var vertexNormals = face.vertexNormals;\n            if (vertexNormals.length === 3) {\n                vertexNormals[0].copy(vertices[face.a]);\n                vertexNormals[1].copy(vertices[face.b]);\n                vertexNormals[2].copy(vertices[face.c]);\n            }\n            else {\n                vertexNormals[0] = vertices[face.a].clone();\n                vertexNormals[1] = vertices[face.b].clone();\n                vertexNormals[2] = vertices[face.c].clone();\n            }\n        }\n        if (this.faces.length > 0) {\n            this.normalsNeedUpdate = true;\n        }\n    };\n    Gmetry.prototype.computeFlatVertexNormals = function () {\n        this.computeFaceNormals();\n        for (var f = 0, fl = this.faces.length; f < fl; f++) {\n            var face = this.faces[f];\n            var vertexNormals = face.vertexNormals;\n            if (vertexNormals.length === 3) {\n                vertexNormals[0].copy(face.normal);\n                vertexNormals[1].copy(face.normal);\n                vertexNormals[2].copy(face.normal);\n            }\n            else {\n                vertexNormals[0] = face.normal.clone();\n                vertexNormals[1] = face.normal.clone();\n                vertexNormals[2] = face.normal.clone();\n            }\n        }\n        if (this.faces.length > 0) {\n            this.normalsNeedUpdate = true;\n        }\n    };\n    Gmetry.prototype.computeMorphNormals = function () {\n        // save original normals\n        // - create temp variables on first access\n        //   otherwise just copy (for faster repeated calls)\n        for (var f = 0, fl = this.faces.length; f < fl; f++) {\n            var face = this.faces[f];\n            if (!face.__originalFaceNormal) {\n                face.__originalFaceNormal = face.normal.clone();\n            }\n            else {\n                face.__originalFaceNormal.copy(face.normal);\n            }\n            if (!face.__originalVertexNormals)\n                face.__originalVertexNormals = [];\n            for (var i = 0, il = face.vertexNormals.length; i < il; i++) {\n                if (!face.__originalVertexNormals[i]) {\n                    face.__originalVertexNormals[i] = face.vertexNormals[i].clone();\n                }\n                else {\n                    face.__originalVertexNormals[i].copy(face.vertexNormals[i]);\n                }\n            }\n        }\n        // use temp geometry to compute face and vertex normals for each morph\n        var tmpGeo = new Gmetry();\n        tmpGeo.faces = this.faces;\n        for (var i = 0, il = this.morphTargets.length; i < il; i++) {\n            // create on first access\n            if (!this.morphNormals[i]) {\n                this.morphNormals[i] = {}; // TODO: is this typecast really necessary?\n                this.morphNormals[i].faceNormals = [];\n                this.morphNormals[i].vertexNormals = [];\n                var dstNormalsFace = this.morphNormals[i].faceNormals;\n                var dstNormalsVertex = this.morphNormals[i].vertexNormals;\n                for (var f = 0, fl = this.faces.length; f < fl; f++) {\n                    var faceNormal = new three_1.Vector3();\n                    var vertexNormals = { a: new three_1.Vector3(), b: new three_1.Vector3(), c: new three_1.Vector3() };\n                    dstNormalsFace.push(faceNormal);\n                    dstNormalsVertex.push(vertexNormals);\n                }\n            }\n            var morphNormals = this.morphNormals[i];\n            // set vertices to morph target\n            tmpGeo.vertices = this.morphTargets[i].vertices;\n            // compute morph normals\n            tmpGeo.computeFaceNormals();\n            tmpGeo.computeVertexNormals();\n            // store morph normals\n            for (var f = 0, fl = this.faces.length; f < fl; f++) {\n                var face = this.faces[f];\n                var faceNormal = morphNormals.faceNormals[f];\n                var vertexNormals = morphNormals.vertexNormals[f];\n                faceNormal.copy(face.normal);\n                vertexNormals.a.copy(face.vertexNormals[0]);\n                vertexNormals.b.copy(face.vertexNormals[1]);\n                vertexNormals.c.copy(face.vertexNormals[2]);\n            }\n        }\n        // restore original normals\n        for (var f = 0, fl = this.faces.length; f < fl; f++) {\n            var face = this.faces[f];\n            face.normal = face.__originalFaceNormal;\n            face.vertexNormals = face.__originalVertexNormals;\n        }\n    };\n    Gmetry.prototype.computeBoundingBox = function () {\n        if (this.boundingBox === null) {\n            this.boundingBox = new three_1.Box3();\n        }\n        this.boundingBox.setFromPoints(this.vertices);\n    };\n    Gmetry.prototype.computeBoundingSphere = function () {\n        if (this.boundingSphere === null) {\n            this.boundingSphere = new three_1.Sphere();\n        }\n        this.boundingSphere.setFromPoints(this.vertices);\n    };\n    Gmetry.prototype.merge = function (geometry, matrix, materialIndexOffset) {\n        if (materialIndexOffset === void 0) { materialIndexOffset = 0; }\n        if (!(geometry && geometry.isGeometry)) {\n            console.error('THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry);\n            return;\n        }\n        var normalMatrix;\n        var vertexOffset = this.vertices.length, vertices1 = this.vertices, vertices2 = geometry.vertices, faces1 = this.faces, faces2 = geometry.faces, colors1 = this.colors, colors2 = geometry.colors;\n        if (matrix !== undefined) {\n            normalMatrix = new three_1.Matrix3().getNormalMatrix(matrix);\n        }\n        // vertices\n        for (var i = 0, il = vertices2.length; i < il; i++) {\n            var vertex = vertices2[i];\n            var vertexCopy = vertex.clone();\n            if (matrix !== undefined)\n                vertexCopy.applyMatrix4(matrix);\n            vertices1.push(vertexCopy);\n        }\n        // colors\n        for (var i = 0, il = colors2.length; i < il; i++) {\n            colors1.push(colors2[i].clone());\n        }\n        // faces\n        for (var i = 0, il = faces2.length; i < il; i++) {\n            var face = faces2[i];\n            var normal = void 0, color = void 0;\n            var faceVertexNormals = face.vertexNormals, faceVertexColors = face.vertexColors;\n            var faceCopy = new Face3_1.Face3(face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset);\n            faceCopy.normal.copy(face.normal);\n            if (normalMatrix !== undefined) {\n                faceCopy.normal.applyMatrix3(normalMatrix).normalize();\n            }\n            for (var j = 0, jl = faceVertexNormals.length; j < jl; j++) {\n                normal = faceVertexNormals[j].clone();\n                if (normalMatrix !== undefined) {\n                    normal.applyMatrix3(normalMatrix).normalize();\n                }\n                faceCopy.vertexNormals.push(normal);\n            }\n            faceCopy.color.copy(face.color);\n            for (var j = 0, jl = faceVertexColors.length; j < jl; j++) {\n                color = faceVertexColors[j];\n                faceCopy.vertexColors.push(color.clone());\n            }\n            faceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n            faces1.push(faceCopy);\n        }\n        // uvs\n        for (var i = 0, il = geometry.faceVertexUvs.length; i < il; i++) {\n            var faceVertexUvs2 = geometry.faceVertexUvs[i];\n            if (this.faceVertexUvs[i] === undefined)\n                this.faceVertexUvs[i] = [];\n            for (var j = 0, jl = faceVertexUvs2.length; j < jl; j++) {\n                var uvs2 = faceVertexUvs2[j], uvsCopy = [];\n                for (var k = 0, kl = uvs2.length; k < kl; k++) {\n                    uvsCopy.push(uvs2[k].clone());\n                }\n                // this.faceVertexUvs[ i ].push( uvsCopy );\n                // TODO: verify correctness\n                this.faceVertexUvs[i].push(uvsCopy);\n            }\n        }\n    };\n    Gmetry.prototype.mergeMesh = function (mesh) {\n        if (!(mesh && mesh.isMesh)) {\n            console.error('THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh);\n            return;\n        }\n        if (mesh.matrixAutoUpdate)\n            mesh.updateMatrix();\n        this.merge(mesh.geometry, mesh.matrix);\n    };\n    /*\n     * Checks for duplicate vertices with hashmap.\n     * Duplicated vertices are removed\n     * and faces' vertices are updated.\n     */\n    Gmetry.prototype.mergeVertices = function (precisionPoints) {\n        if (precisionPoints === void 0) { precisionPoints = 4; }\n        var verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n        var unique = [], changes = [];\n        var precision = Math.pow(10, precisionPoints);\n        for (var i = 0, il = this.vertices.length; i < il; i++) {\n            var v = this.vertices[i];\n            var key = Math.round(v.x * precision) + '_' + Math.round(v.y * precision) + '_' + Math.round(v.z * precision);\n            if (verticesMap[key] === undefined) {\n                verticesMap[key] = i;\n                unique.push(this.vertices[i]);\n                changes[i] = unique.length - 1;\n            }\n            else {\n                //console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n                changes[i] = changes[verticesMap[key]];\n            }\n        }\n        // if faces are completely degenerate after merging vertices, we\n        // have to remove them from the geometry.\n        var faceIndicesToRemove = [];\n        for (var i = 0, il = this.faces.length; i < il; i++) {\n            var face = this.faces[i];\n            face.a = changes[face.a];\n            face.b = changes[face.b];\n            face.c = changes[face.c];\n            var indices = [face.a, face.b, face.c];\n            // if any duplicate vertices are found in a Face3\n            // we have to remove the face as nothing can be saved\n            for (var n = 0; n < 3; n++) {\n                if (indices[n] === indices[(n + 1) % 3]) {\n                    faceIndicesToRemove.push(i);\n                    break;\n                }\n            }\n        }\n        for (var i = faceIndicesToRemove.length - 1; i >= 0; i--) {\n            var idx = faceIndicesToRemove[i];\n            this.faces.splice(idx, 1);\n            for (var j = 0, jl = this.faceVertexUvs.length; j < jl; j++) {\n                this.faceVertexUvs[j].splice(idx, 1);\n            }\n        }\n        // Use unique set of vertices\n        var diff = this.vertices.length - unique.length;\n        this.vertices = unique;\n        return diff;\n    };\n    Gmetry.prototype.setFromPoints = function (points) {\n        this.vertices = [];\n        for (var i = 0, l = points.length; i < l; i++) {\n            var point = points[i];\n            this.vertices.push(new three_1.Vector3(point.x, point.y, point.z || 0));\n        }\n        return this;\n    };\n    Gmetry.prototype.sortFacesByMaterialIndex = function () {\n        var faces = this.faces;\n        var length = faces.length;\n        // tag faces\n        for (var i = 0; i < length; i++) {\n            faces[i]._id = i; // TODO: can we use a proper type for _id?\n        }\n        // sort faces\n        function materialIndexSort(a, b) {\n            return a.materialIndex - b.materialIndex;\n        }\n        faces.sort(materialIndexSort);\n        // sort uvs\n        var uvs1 = this.faceVertexUvs[0];\n        var uvs2 = this.faceVertexUvs[1];\n        var newUvs1, newUvs2;\n        if (uvs1 && uvs1.length === length)\n            newUvs1 = [];\n        if (uvs2 && uvs2.length === length)\n            newUvs2 = [];\n        for (var i = 0; i < length; i++) {\n            var id = faces[i]._id;\n            if (newUvs1)\n                newUvs1.push(uvs1[id]);\n            if (newUvs2)\n                newUvs2.push(uvs2[id]);\n        }\n        if (newUvs1)\n            this.faceVertexUvs[0] = newUvs1;\n        if (newUvs2)\n            this.faceVertexUvs[1] = newUvs2;\n    };\n    Gmetry.prototype.toJSON = function () {\n        var data = {\n            metadata: {\n                version: 4.5,\n                type: 'Geometry',\n                generator: 'Geometry.toJSON'\n            },\n            // TODO: check this (this is new)\n            uuid: null,\n            type: null,\n            name: null,\n            data: null\n        };\n        // standard Geometry serialization\n        data.uuid = this.uuid;\n        data.type = this.type;\n        if (this.name !== '')\n            data.name = this.name;\n        if (this.parameters !== undefined) {\n            var parameters = this.parameters;\n            for (var key in parameters) {\n                if (parameters[key] !== undefined)\n                    data[key] = parameters[key];\n            }\n            return data;\n        }\n        var vertices = [];\n        for (var i = 0; i < this.vertices.length; i++) {\n            var vertex = this.vertices[i];\n            vertices.push(vertex.x, vertex.y, vertex.z);\n        }\n        var faces = [];\n        var normals = [];\n        var normalsHash = {};\n        var colors = [];\n        var colorsHash = {};\n        var uvs = [];\n        var uvsHash = {};\n        for (var i = 0; i < this.faces.length; i++) {\n            var face = this.faces[i];\n            var hasMaterial = true;\n            var hasFaceUv = false; // deprecated\n            var hasFaceVertexUv = this.faceVertexUvs[0][i] !== undefined;\n            var hasFaceNormal = face.normal.length() > 0;\n            var hasFaceVertexNormal = face.vertexNormals.length > 0;\n            var hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n            var hasFaceVertexColor = face.vertexColors.length > 0;\n            var faceType = 0;\n            faceType = setBit(faceType, 0, 0); // isQuad\n            faceType = setBit(faceType, 1, hasMaterial);\n            faceType = setBit(faceType, 2, hasFaceUv);\n            faceType = setBit(faceType, 3, hasFaceVertexUv);\n            faceType = setBit(faceType, 4, hasFaceNormal);\n            faceType = setBit(faceType, 5, hasFaceVertexNormal);\n            faceType = setBit(faceType, 6, hasFaceColor);\n            faceType = setBit(faceType, 7, hasFaceVertexColor);\n            faces.push(faceType);\n            faces.push(face.a, face.b, face.c);\n            faces.push(face.materialIndex);\n            if (hasFaceVertexUv) {\n                var faceVertexUvs = this.faceVertexUvs[0][i];\n                faces.push(getUvIndex(faceVertexUvs[0]), getUvIndex(faceVertexUvs[1]), getUvIndex(faceVertexUvs[2]));\n            }\n            if (hasFaceNormal) {\n                faces.push(getNormalIndex(face.normal));\n            }\n            if (hasFaceVertexNormal) {\n                var vertexNormals = face.vertexNormals;\n                faces.push(getNormalIndex(vertexNormals[0]), getNormalIndex(vertexNormals[1]), getNormalIndex(vertexNormals[2]));\n            }\n            if (hasFaceColor) {\n                faces.push(getColorIndex(face.color));\n            }\n            if (hasFaceVertexColor) {\n                var vertexColors = face.vertexColors;\n                faces.push(getColorIndex(vertexColors[0]), getColorIndex(vertexColors[1]), getColorIndex(vertexColors[2]));\n            }\n        }\n        function setBit(value, position, enabled) {\n            return enabled ? value | (1 << position) : value & (~(1 << position));\n        }\n        function getNormalIndex(normal) {\n            var hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n            if (normalsHash[hash] !== undefined) {\n                return normalsHash[hash];\n            }\n            normalsHash[hash] = normals.length / 3;\n            normals.push(normal.x, normal.y, normal.z);\n            return normalsHash[hash];\n        }\n        function getColorIndex(color) {\n            var hash = color.r.toString() + color.g.toString() + color.b.toString();\n            if (colorsHash[hash] !== undefined) {\n                return colorsHash[hash];\n            }\n            colorsHash[hash] = colors.length;\n            colors.push(color.getHex());\n            return colorsHash[hash];\n        }\n        function getUvIndex(uv) {\n            var hash = uv.x.toString() + uv.y.toString();\n            if (uvsHash[hash] !== undefined) {\n                return uvsHash[hash];\n            }\n            uvsHash[hash] = uvs.length / 2;\n            uvs.push(uv.x, uv.y);\n            return uvsHash[hash];\n        }\n        data.data = {};\n        data.data.vertices = vertices;\n        data.data.normals = normals;\n        if (colors.length > 0)\n            data.data.colors = colors;\n        if (uvs.length > 0)\n            data.data.uvs = [uvs]; // temporal backward compatibility\n        data.data.faces = faces;\n        return data;\n    };\n    Gmetry.prototype.clone = function () {\n        /*\n         // Handle primitives\n         const parameters = this.parameters;\n         if ( parameters !== undefined ) {\n         const values = [];\n         for ( const key in parameters ) {\n         values.push( parameters[ key ] );\n         }\n         const geometry = Object.create( this.constructor.prototype );\n         this.constructor.apply( geometry, values );\n         return geometry;\n         }\n         return new this.constructor().copy( this );\n         */\n        return new Gmetry().copy(this);\n    };\n    Gmetry.prototype.copy = function (source) {\n        // reset\n        this.vertices = [];\n        this.colors = [];\n        this.faces = [];\n        this.faceVertexUvs = [[]];\n        this.morphTargets = [];\n        this.morphNormals = [];\n        this.skinWeights = [];\n        this.skinIndices = [];\n        this.lineDistances = [];\n        this.boundingBox = null;\n        this.boundingSphere = null;\n        // name\n        this.name = source.name;\n        // vertices\n        var vertices = source.vertices;\n        for (var i = 0, il = vertices.length; i < il; i++) {\n            this.vertices.push(vertices[i].clone());\n        }\n        // colors\n        var colors = source.colors;\n        for (var i = 0, il = colors.length; i < il; i++) {\n            this.colors.push(colors[i].clone());\n        }\n        // faces\n        var faces = source.faces;\n        for (var i = 0, il = faces.length; i < il; i++) {\n            this.faces.push(faces[i].clone());\n        }\n        // face vertex uvs\n        for (var i = 0, il = source.faceVertexUvs.length; i < il; i++) {\n            var faceVertexUvs = source.faceVertexUvs[i];\n            if (this.faceVertexUvs[i] === undefined) {\n                this.faceVertexUvs[i] = [];\n            }\n            for (var j = 0, jl = faceVertexUvs.length; j < jl; j++) {\n                var uvs = faceVertexUvs[j], uvsCopy = [];\n                for (var k = 0, kl = uvs.length; k < kl; k++) {\n                    var uv = uvs[k];\n                    uvsCopy.push(uv.clone());\n                }\n                this.faceVertexUvs[i].push(uvsCopy);\n            }\n        }\n        // morph targets\n        var morphTargets = source.morphTargets;\n        for (var i = 0, il = morphTargets.length; i < il; i++) {\n            // const morphTarget = {};\n            // TODO: verify correctness\n            var morphTarget = {};\n            morphTarget.name = morphTargets[i].name;\n            // vertices\n            if (morphTargets[i].vertices !== undefined) {\n                morphTarget.vertices = [];\n                for (var j = 0, jl = morphTargets[i].vertices.length; j < jl; j++) {\n                    morphTarget.vertices.push(morphTargets[i].vertices[j].clone());\n                }\n            }\n            // normals\n            if (morphTargets[i].normals !== undefined) {\n                morphTarget.normals = [];\n                for (var j = 0, jl = morphTargets[i].normals.length; j < jl; j++) {\n                    morphTarget.normals.push(morphTargets[i].normals[j].clone());\n                }\n            }\n            this.morphTargets.push(morphTarget);\n        }\n        // morph normals\n        var morphNormals = source.morphNormals;\n        for (var i = 0, il = morphNormals.length; i < il; i++) {\n            var morphNormal = {};\n            // vertex normals\n            if (morphNormals[i].vertexNormals !== undefined) {\n                morphNormal.vertexNormals = [];\n                for (var j = 0, jl = morphNormals[i].vertexNormals.length; j < jl; j++) {\n                    var srcVertexNormal = morphNormals[i].vertexNormals[j];\n                    var destVertexNormal = {};\n                    destVertexNormal.a = srcVertexNormal.a.clone();\n                    destVertexNormal.b = srcVertexNormal.b.clone();\n                    destVertexNormal.c = srcVertexNormal.c.clone();\n                    morphNormal.vertexNormals.push(destVertexNormal);\n                }\n            }\n            // face normals\n            if (morphNormals[i].faceNormals !== undefined) {\n                morphNormal.faceNormals = [];\n                for (var j = 0, jl = morphNormals[i].faceNormals.length; j < jl; j++) {\n                    morphNormal.faceNormals.push(morphNormals[i].faceNormals[j].clone());\n                }\n            }\n            this.morphNormals.push(morphNormal);\n        }\n        // skin weights\n        var skinWeights = source.skinWeights;\n        for (var i = 0, il = skinWeights.length; i < il; i++) {\n            this.skinWeights.push(skinWeights[i].clone());\n        }\n        // skin indices\n        var skinIndices = source.skinIndices;\n        for (var i = 0, il = skinIndices.length; i < il; i++) {\n            this.skinIndices.push(skinIndices[i].clone());\n        }\n        // line distances\n        var lineDistances = source.lineDistances;\n        for (var i = 0, il = lineDistances.length; i < il; i++) {\n            this.lineDistances.push(lineDistances[i]);\n        }\n        // bounding box\n        var boundingBox = source.boundingBox;\n        if (boundingBox !== null) {\n            this.boundingBox = boundingBox.clone();\n        }\n        // bounding sphere\n        var boundingSphere = source.boundingSphere;\n        if (boundingSphere !== null) {\n            this.boundingSphere = boundingSphere.clone();\n        }\n        // update flags\n        this.elementsNeedUpdate = source.elementsNeedUpdate;\n        this.verticesNeedUpdate = source.verticesNeedUpdate;\n        this.uvsNeedUpdate = source.uvsNeedUpdate;\n        this.normalsNeedUpdate = source.normalsNeedUpdate;\n        this.colorsNeedUpdate = source.colorsNeedUpdate;\n        this.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\n        this.groupsNeedUpdate = source.groupsNeedUpdate;\n        return this;\n    };\n    Gmetry.prototype.toBufferGeometry = function () {\n        var geometry = new DirectGeometry_1.DirectGeometry().fromGeometry(this);\n        var buffergeometry = new three_1.BufferGeometry();\n        var positions = new Float32Array(geometry.vertices.length * 3);\n        buffergeometry.setAttribute('position', new three_1.BufferAttribute(positions, 3).copyVector3sArray(geometry.vertices));\n        if (geometry.normals.length > 0) {\n            var normals = new Float32Array(geometry.normals.length * 3);\n            buffergeometry.setAttribute('normal', new three_1.BufferAttribute(normals, 3).copyVector3sArray(geometry.normals));\n        }\n        if (geometry.colors.length > 0) {\n            var colors = new Float32Array(geometry.colors.length * 3);\n            buffergeometry.setAttribute('color', new three_1.BufferAttribute(colors, 3).copyColorsArray(geometry.colors));\n        }\n        if (geometry.uvs.length > 0) {\n            var uvs = new Float32Array(geometry.uvs.length * 2);\n            buffergeometry.setAttribute('uv', new three_1.BufferAttribute(uvs, 2).copyVector2sArray(geometry.uvs));\n        }\n        if (geometry.uvs2.length > 0) {\n            var uvs2 = new Float32Array(geometry.uvs2.length * 2);\n            buffergeometry.setAttribute('uv2', new three_1.BufferAttribute(uvs2, 2).copyVector2sArray(geometry.uvs2));\n        }\n        // groups\n        buffergeometry.groups = geometry.groups;\n        // morphs\n        for (var name_1 in geometry.morphTargets) {\n            var array = [];\n            var morphTargets = geometry.morphTargets[name_1];\n            for (var i = 0, l = morphTargets.length; i < l; i++) {\n                var morphTarget = morphTargets[i];\n                var attribute = new three_1.Float32BufferAttribute(morphTarget.data.length * 3, 3);\n                attribute.name = morphTarget.name;\n                array.push(attribute.copyVector3sArray(morphTarget.data));\n            }\n            buffergeometry.morphAttributes[name_1] = array;\n        }\n        // skinning\n        if (geometry.skinIndices.length > 0) {\n            var skinIndices = new three_1.Float32BufferAttribute(geometry.skinIndices.length * 4, 4);\n            buffergeometry.setAttribute('skinIndex', skinIndices.copyVector4sArray(geometry.skinIndices));\n        }\n        if (geometry.skinWeights.length > 0) {\n            var skinWeights = new three_1.Float32BufferAttribute(geometry.skinWeights.length * 4, 4);\n            buffergeometry.setAttribute('skinWeight', skinWeights.copyVector4sArray(geometry.skinWeights));\n        }\n        //\n        if (geometry.boundingSphere !== null) {\n            buffergeometry.boundingSphere = geometry.boundingSphere.clone();\n        }\n        if (geometry.boundingBox !== null) {\n            buffergeometry.boundingBox = geometry.boundingBox.clone();\n        }\n        return buffergeometry;\n    };\n    Gmetry.prototype.computeTangents = function () {\n        console.error('THREE.Geometry: .computeTangents() has been removed.');\n    };\n    Gmetry.prototype.computeLineDistances = function () {\n        console.error('THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.');\n    };\n    Gmetry.prototype.applyMatrix = function (matrix) {\n        console.warn('THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4().');\n        return this.applyMatrix4(matrix);\n    };\n    Gmetry.prototype.dispose = function () {\n        this.dispatchEvent({ type: 'dispose' });\n    };\n    Gmetry.createBufferGeometryFromObject = function (object) {\n        var buffergeometry = new three_1.BufferGeometry();\n        var geometry = object.geometry;\n        if (object.isPoints || object.isLine) {\n            var positions = new three_1.Float32BufferAttribute(geometry.vertices.length * 3, 3);\n            var colors = new three_1.Float32BufferAttribute(geometry.colors.length * 3, 3);\n            buffergeometry.setAttribute('position', positions.copyVector3sArray(geometry.vertices));\n            buffergeometry.setAttribute('color', colors.copyColorsArray(geometry.colors));\n            if (geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length) {\n                var lineDistances = new three_1.Float32BufferAttribute(geometry.lineDistances.length, 1);\n                buffergeometry.setAttribute('lineDistance', lineDistances.copyArray(geometry.lineDistances));\n            }\n            if (geometry.boundingSphere !== null) {\n                buffergeometry.boundingSphere = geometry.boundingSphere.clone();\n            }\n            if (geometry.boundingBox !== null) {\n                buffergeometry.boundingBox = geometry.boundingBox.clone();\n            }\n        }\n        else if (object.isMesh) {\n            buffergeometry = geometry.toBufferGeometry();\n        }\n        return buffergeometry;\n    };\n    return Gmetry;\n}(three_1.EventDispatcher));\nexports.Gmetry = Gmetry;\n// Gmetry.prototype.isGeometry = true;\n//# sourceMappingURL=Gmetry.js.map","// Expose all your components to the global scope here.\n\nglobalThis.ThreeGeometryHellfix = require(\"./\").ThreeGeometryHellfix;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./DirectGeometry\"), exports);\n__exportStar(require(\"./Face3\"), exports);\n__exportStar(require(\"./Gmetry\"), exports);\n__exportStar(require(\"./interfaces\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=interfaces.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunktswebpack\"] = self[\"webpackChunktswebpack\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [736], () => (__webpack_require__(333)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","Object","defineProperty","exports","value","DirectGeometry","three_1","this","vertices","normals","colors","uvs","uvs2","groups","morphTargets","position","normal","skinWeights","skinIndices","boundingBox","boundingSphere","verticesNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","uvsNeedUpdate","groupsNeedUpdate","prototype","computeGroups","geometry","group","i","materialIndex","undefined","faces","length","face","count","start","push","fromGeometry","morphTargetsPosition","faceVertexUvs","hasFaceVertexUv","hasFaceVertexUv2","morphTargetsLength","name","data","morphTargetsNormal","morphNormals","morphNormalsLength","hasSkinIndices","hasSkinWeights","console","error","a","b","c","vertexNormals","vertexUvs","vertexColors","color","warn","Vector2","j","morphTarget","morphNormal","clone","Face3","Vector3","isVector3","Array","isArray","Color","isColor","copy","source","il","extendStatics","__extends","d","setPrototypeOf","__proto__","p","hasOwnProperty","call","TypeError","String","__","constructor","create","Gmetry","DirectGeometry_1","Face3_1","_m1","Matrix4","_obj","Object3D","_offset","_super","_this","uuid","MathUtils","generateUUID","type","lineDistances","elementsNeedUpdate","lineDistancesNeedUpdate","isGeometry","applyMatrix4","matrix","normalMatrix","Matrix3","getNormalMatrix","applyMatrix3","normalize","jl","computeBoundingBox","computeBoundingSphere","rotateX","angle","makeRotationX","rotateY","makeRotationY","rotateZ","makeRotationZ","translate","x","y","z","makeTranslation","scale","makeScale","lookAt","vector","updateMatrix","fromBufferGeometry","scope","index","attributes","uv","uv2","fromBufferAttribute","addFace","getX","computeFaceNormals","center","getCenter","negate","radius","s","set","cb","ab","f","fl","vA","vB","vC","subVectors","cross","computeVertexNormals","areaWeighted","v","vl","add","computeFlatVertexNormals","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","dstNormalsFace","dstNormalsVertex","faceNormal","Box3","setFromPoints","Sphere","merge","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","colors1","colors2","vertexCopy","faceVertexNormals","faceVertexColors","faceCopy","faceVertexUvs2","uvsCopy","k","kl","mergeMesh","mesh","isMesh","matrixAutoUpdate","mergeVertices","precisionPoints","verticesMap","unique","changes","precision","Math","pow","key","round","faceIndicesToRemove","indices","n","idx","splice","diff","points","l","point","sortFacesByMaterialIndex","_id","sort","newUvs1","newUvs2","uvs1","id","toJSON","metadata","version","generator","parameters","vertex","normalsHash","colorsHash","uvsHash","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","r","g","hasFaceVertexColor","faceType","setBit","getUvIndex","getNormalIndex","getColorIndex","enabled","hash","toString","getHex","srcVertexNormal","destVertexNormal","toBufferGeometry","buffergeometry","BufferGeometry","positions","Float32Array","setAttribute","BufferAttribute","copyVector3sArray","copyColorsArray","copyVector2sArray","name_1","array","attribute","Float32BufferAttribute","morphAttributes","copyVector4sArray","computeTangents","computeLineDistances","applyMatrix","dispose","dispatchEvent","createBufferGeometryFromObject","object","isPoints","isLine","copyArray","EventDispatcher","globalThis","ThreeGeometryHellfix","__createBinding","o","m","k2","enumerable","get","__exportStar","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","keys","every","obj","prop","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}