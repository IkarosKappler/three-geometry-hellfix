{"version":3,"file":"three-geometry-hellfix-main.min.js","mappings":"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","sources":["webpack://three-geometry-hellfix/webpack/runtime/chunk loaded","webpack://three-geometry-hellfix/./src/cjs/DirectGeometry.js","webpack://three-geometry-hellfix/./src/cjs/Face3.js","webpack://three-geometry-hellfix/./src/cjs/Gmetry.js","webpack://three-geometry-hellfix/./src/cjs/entry.js","webpack://three-geometry-hellfix/./src/cjs/index.js","webpack://three-geometry-hellfix/./src/cjs/interfaces.js","webpack://three-geometry-hellfix/./src/cjs/mylibrary.js","webpack://three-geometry-hellfix/webpack/bootstrap","webpack://three-geometry-hellfix/webpack/runtime/hasOwnProperty shorthand","webpack://three-geometry-hellfix/webpack/runtime/jsonp chunk loading","webpack://three-geometry-hellfix/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","\"use strict\";\n/**\n * THE ORIGINAL SOURCE COOE IS HERE:\n *    https://github.com/mrdoob/three.js/blob/dev/examples/jsm/deprecated/Geometry.js\n *\n * This is a backport of the old (deprecated) THREE.DirectGeometry class.\n *\n * It got deprecated in version r125 and was announced to be completely dropped in future versions.\n *\n * As it was a very useful class I wanted to preserve it for some of my projects which depend on it.\n *\n * And here this is a Typescript port, too. Enjoy!\n *    - Ikaros Kappler\n *\n * @date 2022-02-11\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DirectGeometry = void 0;\n//  import * as THREE from \"three\";\nvar three_1 = require(\"three\");\nvar DirectGeometry = /** @class */ (function () {\n    function DirectGeometry() {\n        this.vertices = [];\n        this.normals = [];\n        this.colors = [];\n        this.uvs = [];\n        this.uvs2 = [];\n        this.groups = [];\n        this.morphTargets = { position: null, normal: null };\n        this.skinWeights = [];\n        this.skinIndices = [];\n        // this.lineDistances = [];\n        this.boundingBox = null;\n        this.boundingSphere = null;\n        // update flags\n        this.verticesNeedUpdate = false;\n        this.normalsNeedUpdate = false;\n        this.colorsNeedUpdate = false;\n        this.uvsNeedUpdate = false;\n        this.groupsNeedUpdate = false;\n    }\n    DirectGeometry.prototype.computeGroups = function (geometry) {\n        var groups = [];\n        var group, i;\n        var materialIndex = undefined;\n        var faces = geometry.faces;\n        for (i = 0; i < faces.length; i++) {\n            var face = faces[i];\n            // materials\n            if (face.materialIndex !== materialIndex) {\n                materialIndex = face.materialIndex;\n                if (group !== undefined) {\n                    group.count = (i * 3) - group.start;\n                    groups.push(group);\n                }\n                group = {\n                    start: i * 3,\n                    materialIndex: materialIndex\n                };\n            }\n        }\n        if (group !== undefined) {\n            group.count = (i * 3) - group.start;\n            groups.push(group);\n        }\n        this.groups = groups;\n    };\n    DirectGeometry.prototype.fromGeometry = function (geometry) {\n        var faces = geometry.faces;\n        var vertices = geometry.vertices;\n        var faceVertexUvs = geometry.faceVertexUvs;\n        var hasFaceVertexUv = faceVertexUvs[0] && faceVertexUvs[0].length > 0;\n        var hasFaceVertexUv2 = faceVertexUvs[1] && faceVertexUvs[1].length > 0;\n        // morphs\n        var morphTargets = geometry.morphTargets;\n        var morphTargetsLength = morphTargets.length;\n        var morphTargetsPosition;\n        if (morphTargetsLength > 0) {\n            morphTargetsPosition = [];\n            for (var i = 0; i < morphTargetsLength; i++) {\n                morphTargetsPosition[i] = {\n                    name: morphTargets[i].name,\n                    data: []\n                };\n            }\n            this.morphTargets.position = morphTargetsPosition;\n        }\n        var morphNormals = geometry.morphNormals;\n        var morphNormalsLength = morphNormals.length;\n        var morphTargetsNormal;\n        if (morphNormalsLength > 0) {\n            morphTargetsNormal = [];\n            for (var i = 0; i < morphNormalsLength; i++) {\n                morphTargetsNormal[i] = {\n                    name: morphNormals[i].name,\n                    data: []\n                };\n            }\n            this.morphTargets.normal = morphTargetsNormal;\n        }\n        // skins\n        var skinIndices = geometry.skinIndices;\n        var skinWeights = geometry.skinWeights;\n        var hasSkinIndices = skinIndices.length === vertices.length;\n        var hasSkinWeights = skinWeights.length === vertices.length;\n        //\n        if (vertices.length > 0 && faces.length === 0) {\n            console.error('THREE.DirectGeometry: Faceless geometries are not supported.');\n        }\n        for (var i = 0; i < faces.length; i++) {\n            var face = faces[i];\n            this.vertices.push(vertices[face.a], vertices[face.b], vertices[face.c]);\n            var vertexNormals = face.vertexNormals;\n            if (vertexNormals.length === 3) {\n                this.normals.push(vertexNormals[0], vertexNormals[1], vertexNormals[2]);\n            }\n            else {\n                var normal = face.normal;\n                this.normals.push(normal, normal, normal);\n            }\n            var vertexColors = face.vertexColors;\n            if (vertexColors.length === 3) {\n                this.colors.push(vertexColors[0], vertexColors[1], vertexColors[2]);\n            }\n            else {\n                var color = face.color;\n                this.colors.push(color, color, color);\n            }\n            if (hasFaceVertexUv === true) {\n                var vertexUvs = faceVertexUvs[0][i];\n                if (vertexUvs !== undefined) {\n                    this.uvs.push(vertexUvs[0], vertexUvs[1], vertexUvs[2]);\n                }\n                else {\n                    console.warn('THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i);\n                    this.uvs.push(new three_1.Vector2(), new three_1.Vector2(), new three_1.Vector2());\n                }\n            }\n            if (hasFaceVertexUv2 === true) {\n                var vertexUvs = faceVertexUvs[1][i];\n                if (vertexUvs !== undefined) {\n                    this.uvs2.push(vertexUvs[0], vertexUvs[1], vertexUvs[2]);\n                }\n                else {\n                    console.warn('THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i);\n                    this.uvs2.push(new three_1.Vector2(), new three_1.Vector2(), new three_1.Vector2());\n                }\n            }\n            // morphs\n            for (var j = 0; j < morphTargetsLength; j++) {\n                var morphTarget = morphTargets[j].vertices;\n                morphTargetsPosition[j].data.push(morphTarget[face.a], morphTarget[face.b], morphTarget[face.c]);\n            }\n            for (var j = 0; j < morphNormalsLength; j++) {\n                var morphNormal = morphNormals[j].vertexNormals[i];\n                morphTargetsNormal[j].data.push(morphNormal.a, morphNormal.b, morphNormal.c);\n            }\n            // skins\n            if (hasSkinIndices) {\n                this.skinIndices.push(skinIndices[face.a], skinIndices[face.b], skinIndices[face.c]);\n            }\n            if (hasSkinWeights) {\n                this.skinWeights.push(skinWeights[face.a], skinWeights[face.b], skinWeights[face.c]);\n            }\n        }\n        this.computeGroups(geometry);\n        this.verticesNeedUpdate = geometry.verticesNeedUpdate;\n        this.normalsNeedUpdate = geometry.normalsNeedUpdate;\n        this.colorsNeedUpdate = geometry.colorsNeedUpdate;\n        this.uvsNeedUpdate = geometry.uvsNeedUpdate;\n        this.groupsNeedUpdate = geometry.groupsNeedUpdate;\n        if (geometry.boundingSphere !== null) {\n            this.boundingSphere = geometry.boundingSphere.clone();\n        }\n        if (geometry.boundingBox !== null) {\n            this.boundingBox = geometry.boundingBox.clone();\n        }\n        return this;\n    };\n    return DirectGeometry;\n}());\nexports.DirectGeometry = DirectGeometry;\n//# sourceMappingURL=DirectGeometry.js.map","\"use strict\";\n/**\n * THE ORIGINAL SOURCE COOE IS HERE:\n *    https://github.com/mrdoob/three.js/blob/dev/examples/jsm/deprecated/Geometry.js\n *\n * This is a backport of the old (deprecated) THREE.Face3 class.\n *\n * It got deprecated in version r125 and was announced to be completely dropped in future versions.\n *\n * As it was a very useful class I wanted to preserve it for some of my projects which depend on it.\n *\n * And here this is a Typescript port, too. Enjoy!\n *    - Ikaros Kappler\n *\n * @date 2022-02-11\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Face3 = void 0;\n// TODO: only import required types\n// import * as THREE from \"three\";\nvar three_1 = require(\"three\");\nvar Face3 = /** @class */ (function () {\n    function Face3(a, b, c, normal, color, materialIndex) {\n        if (materialIndex === void 0) { materialIndex = 0; }\n        this.a = a;\n        this.b = b;\n        this.c = c;\n        // this.normal = ( normal && normal.isVector3 ) ? normal : new THREE.Vector3();\n        // this.vertexNormals = Array.isArray( normal ) ? normal : [];\n        // TODO: verify correctness\n        this.normal = (normal && (normal instanceof three_1.Vector3 && normal.isVector3)) ? normal : new three_1.Vector3();\n        this.vertexNormals = Array.isArray(normal) ? normal : [];\n        // this.color = ( color && color.isColor ) ? color : new THREE.Color();\n        this.color = (color && (color instanceof three_1.Color && color.isColor)) ? color : new three_1.Color(); // TODO: verify correctness\n        this.vertexColors = Array.isArray(color) ? color : [];\n        this.materialIndex = materialIndex;\n    }\n    Face3.prototype.clone = function () {\n        // TODO: check if new expression is correct\n        // return new this.constructor().copy( this );\n        return new Face3(this.a, this.b, this.c, this.normal.clone(), this.color.clone(), this.materialIndex).copy(this);\n    };\n    Face3.prototype.copy = function (source) {\n        this.a = source.a;\n        this.b = source.b;\n        this.c = source.c;\n        this.normal.copy(source.normal);\n        this.color.copy(source.color);\n        this.materialIndex = source.materialIndex;\n        for (var i = 0, il = source.vertexNormals.length; i < il; i++) {\n            this.vertexNormals[i] = source.vertexNormals[i].clone();\n        }\n        for (var i = 0, il = source.vertexColors.length; i < il; i++) {\n            this.vertexColors[i] = source.vertexColors[i].clone();\n        }\n        return this;\n    };\n    return Face3;\n}());\nexports.Face3 = Face3;\n//# sourceMappingURL=Face3.js.map","\"use strict\";\n/**\n * THE ORIGINAL SOURCE COOE IS HERE:\n *    https://github.com/mrdoob/three.js/blob/dev/examples/jsm/deprecated/Geometry.js\n *\n * This is a backport of the old (deprecated) THREE.Geometry class.\n *\n * It got deprecated in version r125 and was announced to be completely dropped in future versions.\n *\n * As it was a very useful class I wanted to preserve it for some of my projects which depend on it.\n *\n * And here this is a Typescript port, too. Enjoy!\n *    - Ikaros Kappler\n *\n * @date 2022-02-11\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Gmetry = void 0;\nvar three_1 = require(\"three\");\nvar DirectGeometry_1 = require(\"./DirectGeometry\");\nvar Face3_1 = require(\"./Face3\");\n// import * as THREE from \"three\";\nvar _m1 = new three_1.Matrix4();\nvar _obj = new three_1.Object3D();\nvar _offset = new three_1.Vector3();\n// this.faceVertexUvs[0].push([\n//     new THREE.Vector2(0.0, ratioJ),\n//     new THREE.Vector2(0.0, ratioI),\n//     new THREE.Vector2(1.0, ratioJ)\n//   ]);\n//   this.faceVertexUvs[0].push([\n//     new THREE.Vector2(0.0, ratioI),\n//     new THREE.Vector2(1.0, ratioI),\n//     new THREE.Vector2(1.0, ratioJ)\n//   ]);\nvar Gmetry = /** @class */ (function () {\n    function Gmetry() {\n        // super();\n        // EventDispatcher.call( this );\n        // new Face3( 1, 2,3 );\n        this.uuid = three_1.MathUtils.generateUUID();\n        this.name = '';\n        this.type = 'Geometry';\n        this.vertices = [];\n        this.colors = [];\n        this.faces = [];\n        this.faceVertexUvs = [[]];\n        this.morphTargets = [];\n        this.morphNormals = [];\n        this.skinWeights = [];\n        this.skinIndices = [];\n        this.lineDistances = [];\n        this.boundingBox = null;\n        this.boundingSphere = null;\n        // update flags\n        this.elementsNeedUpdate = false;\n        this.verticesNeedUpdate = false;\n        this.uvsNeedUpdate = false;\n        this.normalsNeedUpdate = false;\n        this.colorsNeedUpdate = false;\n        this.lineDistancesNeedUpdate = false;\n        this.groupsNeedUpdate = false;\n        // Added this line as 'prototype' is not really accessed in Typescript\n        this.isGeometry = true;\n    }\n    Gmetry.prototype.applyMatrix4 = function (matrix) {\n        var normalMatrix = new three_1.Matrix3().getNormalMatrix(matrix);\n        for (var i = 0, il = this.vertices.length; i < il; i++) {\n            var vertex = this.vertices[i];\n            vertex.applyMatrix4(matrix);\n        }\n        for (var i = 0, il = this.faces.length; i < il; i++) {\n            var face = this.faces[i];\n            face.normal.applyMatrix3(normalMatrix).normalize();\n            for (var j = 0, jl = face.vertexNormals.length; j < jl; j++) {\n                face.vertexNormals[j].applyMatrix3(normalMatrix).normalize();\n            }\n        }\n        if (this.boundingBox !== null) {\n            this.computeBoundingBox();\n        }\n        if (this.boundingSphere !== null) {\n            this.computeBoundingSphere();\n        }\n        this.verticesNeedUpdate = true;\n        this.normalsNeedUpdate = true;\n        return this;\n    };\n    Gmetry.prototype.rotateX = function (angle) {\n        // rotate geometry around world x-axis\n        _m1.makeRotationX(angle);\n        this.applyMatrix4(_m1);\n        return this;\n    };\n    Gmetry.prototype.rotateY = function (angle) {\n        // rotate geometry around world y-axis\n        _m1.makeRotationY(angle);\n        this.applyMatrix4(_m1);\n        return this;\n    };\n    Gmetry.prototype.rotateZ = function (angle) {\n        // rotate geometry around world z-axis\n        _m1.makeRotationZ(angle);\n        this.applyMatrix4(_m1);\n        return this;\n    };\n    Gmetry.prototype.translate = function (x, y, z) {\n        // translate geometry\n        _m1.makeTranslation(x, y, z);\n        this.applyMatrix4(_m1);\n        return this;\n    };\n    Gmetry.prototype.scale = function (x, y, z) {\n        // scale geometry\n        _m1.makeScale(x, y, z);\n        this.applyMatrix4(_m1);\n        return this;\n    };\n    Gmetry.prototype.lookAt = function (vector) {\n        _obj.lookAt(vector);\n        _obj.updateMatrix();\n        this.applyMatrix4(_obj.matrix);\n        return this;\n    };\n    Gmetry.prototype.fromBufferGeometry = function (geometry) {\n        var scope = this;\n        var index = geometry.index !== null ? geometry.index : undefined;\n        var attributes = geometry.attributes;\n        if (attributes.position === undefined) {\n            console.error('THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion.');\n            return this;\n        }\n        var position = attributes.position;\n        var normal = attributes.normal;\n        var color = attributes.color;\n        var uv = attributes.uv;\n        var uv2 = attributes.uv2;\n        if (uv2 !== undefined)\n            this.faceVertexUvs[1] = [];\n        for (var i = 0; i < position.count; i++) {\n            scope.vertices.push(new three_1.Vector3().fromBufferAttribute(position, i));\n            if (color !== undefined) {\n                scope.colors.push(new three_1.Color().fromBufferAttribute(color, i));\n            }\n        }\n        function addFace(a, b, c, materialIndex) {\n            var vertexColors = (color === undefined) ? [] : [\n                scope.colors[a].clone(),\n                scope.colors[b].clone(),\n                scope.colors[c].clone()\n            ];\n            var vertexNormals = (normal === undefined) ? [] : [\n                new three_1.Vector3().fromBufferAttribute(normal, a),\n                new three_1.Vector3().fromBufferAttribute(normal, b),\n                new three_1.Vector3().fromBufferAttribute(normal, c)\n            ];\n            var face = new Face3_1.Face3(a, b, c, vertexNormals, vertexColors, materialIndex);\n            scope.faces.push(face);\n            if (uv !== undefined) {\n                scope.faceVertexUvs[0].push([\n                    new three_1.Vector2().fromBufferAttribute(uv, a),\n                    new three_1.Vector2().fromBufferAttribute(uv, b),\n                    new three_1.Vector2().fromBufferAttribute(uv, c)\n                ]);\n            }\n            if (uv2 !== undefined) {\n                scope.faceVertexUvs[1].push([\n                    new three_1.Vector2().fromBufferAttribute(uv2, a),\n                    new three_1.Vector2().fromBufferAttribute(uv2, b),\n                    new three_1.Vector2().fromBufferAttribute(uv2, c)\n                ]);\n            }\n        }\n        var groups = geometry.groups;\n        if (groups.length > 0) {\n            for (var i = 0; i < groups.length; i++) {\n                var group = groups[i];\n                var start = group.start;\n                var count = group.count;\n                for (var j = start, jl = start + count; j < jl; j += 3) {\n                    if (index !== undefined) {\n                        addFace(index.getX(j), index.getX(j + 1), index.getX(j + 2), group.materialIndex);\n                    }\n                    else {\n                        addFace(j, j + 1, j + 2, group.materialIndex);\n                    }\n                }\n            }\n        }\n        else {\n            if (index !== undefined) {\n                for (var i = 0; i < index.count; i += 3) {\n                    addFace(index.getX(i), index.getX(i + 1), index.getX(i + 2));\n                }\n            }\n            else {\n                for (var i = 0; i < position.count; i += 3) {\n                    addFace(i, i + 1, i + 2);\n                }\n            }\n        }\n        this.computeFaceNormals();\n        if (geometry.boundingBox !== null) {\n            this.boundingBox = geometry.boundingBox.clone();\n        }\n        if (geometry.boundingSphere !== null) {\n            this.boundingSphere = geometry.boundingSphere.clone();\n        }\n        return this;\n    };\n    Gmetry.prototype.center = function () {\n        this.computeBoundingBox();\n        this.boundingBox.getCenter(_offset).negate();\n        this.translate(_offset.x, _offset.y, _offset.z);\n        return this;\n    };\n    Gmetry.prototype.normalize = function () {\n        this.computeBoundingSphere();\n        var center = this.boundingSphere.center;\n        var radius = this.boundingSphere.radius;\n        var s = radius === 0 ? 1 : 1.0 / radius;\n        var matrix = new three_1.Matrix4();\n        matrix.set(s, 0, 0, -s * center.x, 0, s, 0, -s * center.y, 0, 0, s, -s * center.z, 0, 0, 0, 1);\n        this.applyMatrix4(matrix);\n        return this;\n    };\n    Gmetry.prototype.computeFaceNormals = function () {\n        var cb = new three_1.Vector3(), ab = new three_1.Vector3();\n        for (var f = 0, fl = this.faces.length; f < fl; f++) {\n            var face = this.faces[f];\n            var vA = this.vertices[face.a];\n            var vB = this.vertices[face.b];\n            var vC = this.vertices[face.c];\n            cb.subVectors(vC, vB);\n            ab.subVectors(vA, vB);\n            cb.cross(ab);\n            cb.normalize();\n            face.normal.copy(cb);\n        }\n    };\n    Gmetry.prototype.computeVertexNormals = function (areaWeighted) {\n        if (areaWeighted === void 0) { areaWeighted = true; }\n        var vertices = new Array(this.vertices.length);\n        for (var v = 0, vl = this.vertices.length; v < vl; v++) {\n            vertices[v] = new three_1.Vector3();\n        }\n        if (areaWeighted) {\n            // vertex normals weighted by triangle areas\n            // http://www.iquilezles.org/www/articles/normals/normals.htm\n            var cb = new three_1.Vector3(), ab = new three_1.Vector3();\n            for (var f = 0, fl = this.faces.length; f < fl; f++) {\n                var face = this.faces[f];\n                var vA = this.vertices[face.a];\n                var vB = this.vertices[face.b];\n                var vC = this.vertices[face.c];\n                cb.subVectors(vC, vB);\n                ab.subVectors(vA, vB);\n                cb.cross(ab);\n                vertices[face.a].add(cb);\n                vertices[face.b].add(cb);\n                vertices[face.c].add(cb);\n            }\n        }\n        else {\n            this.computeFaceNormals();\n            for (var f = 0, fl = this.faces.length; f < fl; f++) {\n                var face = this.faces[f];\n                vertices[face.a].add(face.normal);\n                vertices[face.b].add(face.normal);\n                vertices[face.c].add(face.normal);\n            }\n        }\n        for (var v = 0, vl = this.vertices.length; v < vl; v++) {\n            vertices[v].normalize();\n        }\n        for (var f = 0, fl = this.faces.length; f < fl; f++) {\n            var face = this.faces[f];\n            var vertexNormals = face.vertexNormals;\n            if (vertexNormals.length === 3) {\n                vertexNormals[0].copy(vertices[face.a]);\n                vertexNormals[1].copy(vertices[face.b]);\n                vertexNormals[2].copy(vertices[face.c]);\n            }\n            else {\n                vertexNormals[0] = vertices[face.a].clone();\n                vertexNormals[1] = vertices[face.b].clone();\n                vertexNormals[2] = vertices[face.c].clone();\n            }\n        }\n        if (this.faces.length > 0) {\n            this.normalsNeedUpdate = true;\n        }\n    };\n    Gmetry.prototype.computeFlatVertexNormals = function () {\n        this.computeFaceNormals();\n        for (var f = 0, fl = this.faces.length; f < fl; f++) {\n            var face = this.faces[f];\n            var vertexNormals = face.vertexNormals;\n            if (vertexNormals.length === 3) {\n                vertexNormals[0].copy(face.normal);\n                vertexNormals[1].copy(face.normal);\n                vertexNormals[2].copy(face.normal);\n            }\n            else {\n                vertexNormals[0] = face.normal.clone();\n                vertexNormals[1] = face.normal.clone();\n                vertexNormals[2] = face.normal.clone();\n            }\n        }\n        if (this.faces.length > 0) {\n            this.normalsNeedUpdate = true;\n        }\n    };\n    Gmetry.prototype.computeMorphNormals = function () {\n        // save original normals\n        // - create temp variables on first access\n        //   otherwise just copy (for faster repeated calls)\n        for (var f = 0, fl = this.faces.length; f < fl; f++) {\n            var face = this.faces[f];\n            if (!face.__originalFaceNormal) {\n                face.__originalFaceNormal = face.normal.clone();\n            }\n            else {\n                face.__originalFaceNormal.copy(face.normal);\n            }\n            if (!face.__originalVertexNormals)\n                face.__originalVertexNormals = [];\n            for (var i = 0, il = face.vertexNormals.length; i < il; i++) {\n                if (!face.__originalVertexNormals[i]) {\n                    face.__originalVertexNormals[i] = face.vertexNormals[i].clone();\n                }\n                else {\n                    face.__originalVertexNormals[i].copy(face.vertexNormals[i]);\n                }\n            }\n        }\n        // use temp geometry to compute face and vertex normals for each morph\n        var tmpGeo = new Gmetry();\n        tmpGeo.faces = this.faces;\n        for (var i = 0, il = this.morphTargets.length; i < il; i++) {\n            // create on first access\n            if (!this.morphNormals[i]) {\n                this.morphNormals[i] = {}; // TODO: is this typecast really necessary?\n                this.morphNormals[i].faceNormals = [];\n                this.morphNormals[i].vertexNormals = [];\n                var dstNormalsFace = this.morphNormals[i].faceNormals;\n                var dstNormalsVertex = this.morphNormals[i].vertexNormals;\n                for (var f = 0, fl = this.faces.length; f < fl; f++) {\n                    var faceNormal = new three_1.Vector3();\n                    var vertexNormals = { a: new three_1.Vector3(), b: new three_1.Vector3(), c: new three_1.Vector3() };\n                    dstNormalsFace.push(faceNormal);\n                    dstNormalsVertex.push(vertexNormals);\n                }\n            }\n            var morphNormals = this.morphNormals[i];\n            // set vertices to morph target\n            tmpGeo.vertices = this.morphTargets[i].vertices;\n            // compute morph normals\n            tmpGeo.computeFaceNormals();\n            tmpGeo.computeVertexNormals();\n            // store morph normals\n            for (var f = 0, fl = this.faces.length; f < fl; f++) {\n                var face = this.faces[f];\n                var faceNormal = morphNormals.faceNormals[f];\n                var vertexNormals = morphNormals.vertexNormals[f];\n                faceNormal.copy(face.normal);\n                vertexNormals.a.copy(face.vertexNormals[0]);\n                vertexNormals.b.copy(face.vertexNormals[1]);\n                vertexNormals.c.copy(face.vertexNormals[2]);\n            }\n        }\n        // restore original normals\n        for (var f = 0, fl = this.faces.length; f < fl; f++) {\n            var face = this.faces[f];\n            face.normal = face.__originalFaceNormal;\n            face.vertexNormals = face.__originalVertexNormals;\n        }\n    };\n    Gmetry.prototype.computeBoundingBox = function () {\n        if (this.boundingBox === null) {\n            this.boundingBox = new three_1.Box3();\n        }\n        this.boundingBox.setFromPoints(this.vertices);\n    };\n    Gmetry.prototype.computeBoundingSphere = function () {\n        if (this.boundingSphere === null) {\n            this.boundingSphere = new three_1.Sphere();\n        }\n        this.boundingSphere.setFromPoints(this.vertices);\n    };\n    Gmetry.prototype.merge = function (geometry, matrix, materialIndexOffset) {\n        if (materialIndexOffset === void 0) { materialIndexOffset = 0; }\n        if (!(geometry && geometry.isGeometry)) {\n            console.error('THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry);\n            return;\n        }\n        var normalMatrix;\n        var vertexOffset = this.vertices.length, vertices1 = this.vertices, vertices2 = geometry.vertices, faces1 = this.faces, faces2 = geometry.faces, colors1 = this.colors, colors2 = geometry.colors;\n        if (matrix !== undefined) {\n            normalMatrix = new three_1.Matrix3().getNormalMatrix(matrix);\n        }\n        // vertices\n        for (var i = 0, il = vertices2.length; i < il; i++) {\n            var vertex = vertices2[i];\n            var vertexCopy = vertex.clone();\n            if (matrix !== undefined)\n                vertexCopy.applyMatrix4(matrix);\n            vertices1.push(vertexCopy);\n        }\n        // colors\n        for (var i = 0, il = colors2.length; i < il; i++) {\n            colors1.push(colors2[i].clone());\n        }\n        // faces\n        for (var i = 0, il = faces2.length; i < il; i++) {\n            var face = faces2[i];\n            var normal = void 0, color = void 0;\n            var faceVertexNormals = face.vertexNormals, faceVertexColors = face.vertexColors;\n            var faceCopy = new Face3_1.Face3(face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset);\n            faceCopy.normal.copy(face.normal);\n            if (normalMatrix !== undefined) {\n                faceCopy.normal.applyMatrix3(normalMatrix).normalize();\n            }\n            for (var j = 0, jl = faceVertexNormals.length; j < jl; j++) {\n                normal = faceVertexNormals[j].clone();\n                if (normalMatrix !== undefined) {\n                    normal.applyMatrix3(normalMatrix).normalize();\n                }\n                faceCopy.vertexNormals.push(normal);\n            }\n            faceCopy.color.copy(face.color);\n            for (var j = 0, jl = faceVertexColors.length; j < jl; j++) {\n                color = faceVertexColors[j];\n                faceCopy.vertexColors.push(color.clone());\n            }\n            faceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n            faces1.push(faceCopy);\n        }\n        // uvs\n        for (var i = 0, il = geometry.faceVertexUvs.length; i < il; i++) {\n            var faceVertexUvs2 = geometry.faceVertexUvs[i];\n            if (this.faceVertexUvs[i] === undefined)\n                this.faceVertexUvs[i] = [];\n            for (var j = 0, jl = faceVertexUvs2.length; j < jl; j++) {\n                var uvs2 = faceVertexUvs2[j], uvsCopy = [];\n                for (var k = 0, kl = uvs2.length; k < kl; k++) {\n                    uvsCopy.push(uvs2[k].clone());\n                }\n                // this.faceVertexUvs[ i ].push( uvsCopy );\n                // TODO: verify correctness\n                this.faceVertexUvs[i].push(uvsCopy);\n            }\n        }\n    };\n    Gmetry.prototype.mergeMesh = function (mesh) {\n        if (!(mesh && mesh.isMesh)) {\n            console.error('THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh);\n            return;\n        }\n        if (mesh.matrixAutoUpdate)\n            mesh.updateMatrix();\n        this.merge(mesh.geometry, mesh.matrix);\n    };\n    /*\n     * Checks for duplicate vertices with hashmap.\n     * Duplicated vertices are removed\n     * and faces' vertices are updated.\n     */\n    Gmetry.prototype.mergeVertices = function (precisionPoints) {\n        if (precisionPoints === void 0) { precisionPoints = 4; }\n        var verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n        var unique = [], changes = [];\n        var precision = Math.pow(10, precisionPoints);\n        for (var i = 0, il = this.vertices.length; i < il; i++) {\n            var v = this.vertices[i];\n            var key = Math.round(v.x * precision) + '_' + Math.round(v.y * precision) + '_' + Math.round(v.z * precision);\n            if (verticesMap[key] === undefined) {\n                verticesMap[key] = i;\n                unique.push(this.vertices[i]);\n                changes[i] = unique.length - 1;\n            }\n            else {\n                //console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n                changes[i] = changes[verticesMap[key]];\n            }\n        }\n        // if faces are completely degenerate after merging vertices, we\n        // have to remove them from the geometry.\n        var faceIndicesToRemove = [];\n        for (var i = 0, il = this.faces.length; i < il; i++) {\n            var face = this.faces[i];\n            face.a = changes[face.a];\n            face.b = changes[face.b];\n            face.c = changes[face.c];\n            var indices = [face.a, face.b, face.c];\n            // if any duplicate vertices are found in a Face3\n            // we have to remove the face as nothing can be saved\n            for (var n = 0; n < 3; n++) {\n                if (indices[n] === indices[(n + 1) % 3]) {\n                    faceIndicesToRemove.push(i);\n                    break;\n                }\n            }\n        }\n        for (var i = faceIndicesToRemove.length - 1; i >= 0; i--) {\n            var idx = faceIndicesToRemove[i];\n            this.faces.splice(idx, 1);\n            for (var j = 0, jl = this.faceVertexUvs.length; j < jl; j++) {\n                this.faceVertexUvs[j].splice(idx, 1);\n            }\n        }\n        // Use unique set of vertices\n        var diff = this.vertices.length - unique.length;\n        this.vertices = unique;\n        return diff;\n    };\n    Gmetry.prototype.setFromPoints = function (points) {\n        this.vertices = [];\n        for (var i = 0, l = points.length; i < l; i++) {\n            var point = points[i];\n            this.vertices.push(new three_1.Vector3(point.x, point.y, point.z || 0));\n        }\n        return this;\n    };\n    Gmetry.prototype.sortFacesByMaterialIndex = function () {\n        var faces = this.faces;\n        var length = faces.length;\n        // tag faces\n        for (var i = 0; i < length; i++) {\n            faces[i]._id = i; // TODO: can we use a proper type for _id?\n        }\n        // sort faces\n        function materialIndexSort(a, b) {\n            return a.materialIndex - b.materialIndex;\n        }\n        faces.sort(materialIndexSort);\n        // sort uvs\n        var uvs1 = this.faceVertexUvs[0];\n        var uvs2 = this.faceVertexUvs[1];\n        var newUvs1, newUvs2;\n        if (uvs1 && uvs1.length === length)\n            newUvs1 = [];\n        if (uvs2 && uvs2.length === length)\n            newUvs2 = [];\n        for (var i = 0; i < length; i++) {\n            var id = faces[i]._id;\n            if (newUvs1)\n                newUvs1.push(uvs1[id]);\n            if (newUvs2)\n                newUvs2.push(uvs2[id]);\n        }\n        if (newUvs1)\n            this.faceVertexUvs[0] = newUvs1;\n        if (newUvs2)\n            this.faceVertexUvs[1] = newUvs2;\n    };\n    Gmetry.prototype.toJSON = function () {\n        var data = {\n            metadata: {\n                version: 4.5,\n                type: 'Geometry',\n                generator: 'Geometry.toJSON'\n            },\n            // TODO: check this (this is new)\n            uuid: null,\n            type: null,\n            name: null,\n            data: null\n        };\n        // standard Geometry serialization\n        data.uuid = this.uuid;\n        data.type = this.type;\n        if (this.name !== '')\n            data.name = this.name;\n        if (this.parameters !== undefined) {\n            var parameters = this.parameters;\n            for (var key in parameters) {\n                if (parameters[key] !== undefined)\n                    data[key] = parameters[key];\n            }\n            return data;\n        }\n        var vertices = [];\n        for (var i = 0; i < this.vertices.length; i++) {\n            var vertex = this.vertices[i];\n            vertices.push(vertex.x, vertex.y, vertex.z);\n        }\n        var faces = [];\n        var normals = [];\n        var normalsHash = {};\n        var colors = [];\n        var colorsHash = {};\n        var uvs = [];\n        var uvsHash = {};\n        for (var i = 0; i < this.faces.length; i++) {\n            var face = this.faces[i];\n            var hasMaterial = true;\n            var hasFaceUv = false; // deprecated\n            var hasFaceVertexUv = this.faceVertexUvs[0][i] !== undefined;\n            var hasFaceNormal = face.normal.length() > 0;\n            var hasFaceVertexNormal = face.vertexNormals.length > 0;\n            var hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n            var hasFaceVertexColor = face.vertexColors.length > 0;\n            var faceType = 0;\n            faceType = setBit(faceType, 0, 0); // isQuad\n            faceType = setBit(faceType, 1, hasMaterial);\n            faceType = setBit(faceType, 2, hasFaceUv);\n            faceType = setBit(faceType, 3, hasFaceVertexUv);\n            faceType = setBit(faceType, 4, hasFaceNormal);\n            faceType = setBit(faceType, 5, hasFaceVertexNormal);\n            faceType = setBit(faceType, 6, hasFaceColor);\n            faceType = setBit(faceType, 7, hasFaceVertexColor);\n            faces.push(faceType);\n            faces.push(face.a, face.b, face.c);\n            faces.push(face.materialIndex);\n            if (hasFaceVertexUv) {\n                var faceVertexUvs = this.faceVertexUvs[0][i];\n                faces.push(getUvIndex(faceVertexUvs[0]), getUvIndex(faceVertexUvs[1]), getUvIndex(faceVertexUvs[2]));\n            }\n            if (hasFaceNormal) {\n                faces.push(getNormalIndex(face.normal));\n            }\n            if (hasFaceVertexNormal) {\n                var vertexNormals = face.vertexNormals;\n                faces.push(getNormalIndex(vertexNormals[0]), getNormalIndex(vertexNormals[1]), getNormalIndex(vertexNormals[2]));\n            }\n            if (hasFaceColor) {\n                faces.push(getColorIndex(face.color));\n            }\n            if (hasFaceVertexColor) {\n                var vertexColors = face.vertexColors;\n                faces.push(getColorIndex(vertexColors[0]), getColorIndex(vertexColors[1]), getColorIndex(vertexColors[2]));\n            }\n        }\n        function setBit(value, position, enabled) {\n            return enabled ? value | (1 << position) : value & (~(1 << position));\n        }\n        function getNormalIndex(normal) {\n            var hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n            if (normalsHash[hash] !== undefined) {\n                return normalsHash[hash];\n            }\n            normalsHash[hash] = normals.length / 3;\n            normals.push(normal.x, normal.y, normal.z);\n            return normalsHash[hash];\n        }\n        function getColorIndex(color) {\n            var hash = color.r.toString() + color.g.toString() + color.b.toString();\n            if (colorsHash[hash] !== undefined) {\n                return colorsHash[hash];\n            }\n            colorsHash[hash] = colors.length;\n            colors.push(color.getHex());\n            return colorsHash[hash];\n        }\n        function getUvIndex(uv) {\n            var hash = uv.x.toString() + uv.y.toString();\n            if (uvsHash[hash] !== undefined) {\n                return uvsHash[hash];\n            }\n            uvsHash[hash] = uvs.length / 2;\n            uvs.push(uv.x, uv.y);\n            return uvsHash[hash];\n        }\n        data.data = {};\n        data.data.vertices = vertices;\n        data.data.normals = normals;\n        if (colors.length > 0)\n            data.data.colors = colors;\n        if (uvs.length > 0)\n            data.data.uvs = [uvs]; // temporal backward compatibility\n        data.data.faces = faces;\n        return data;\n    };\n    Gmetry.prototype.clone = function () {\n        /*\n         // Handle primitives\n         const parameters = this.parameters;\n         if ( parameters !== undefined ) {\n         const values = [];\n         for ( const key in parameters ) {\n         values.push( parameters[ key ] );\n         }\n         const geometry = Object.create( this.constructor.prototype );\n         this.constructor.apply( geometry, values );\n         return geometry;\n         }\n         return new this.constructor().copy( this );\n         */\n        return new Gmetry().copy(this);\n    };\n    Gmetry.prototype.copy = function (source) {\n        // reset\n        this.vertices = [];\n        this.colors = [];\n        this.faces = [];\n        this.faceVertexUvs = [[]];\n        this.morphTargets = [];\n        this.morphNormals = [];\n        this.skinWeights = [];\n        this.skinIndices = [];\n        this.lineDistances = [];\n        this.boundingBox = null;\n        this.boundingSphere = null;\n        // name\n        this.name = source.name;\n        // vertices\n        var vertices = source.vertices;\n        for (var i = 0, il = vertices.length; i < il; i++) {\n            this.vertices.push(vertices[i].clone());\n        }\n        // colors\n        var colors = source.colors;\n        for (var i = 0, il = colors.length; i < il; i++) {\n            this.colors.push(colors[i].clone());\n        }\n        // faces\n        var faces = source.faces;\n        for (var i = 0, il = faces.length; i < il; i++) {\n            this.faces.push(faces[i].clone());\n        }\n        // face vertex uvs\n        for (var i = 0, il = source.faceVertexUvs.length; i < il; i++) {\n            var faceVertexUvs = source.faceVertexUvs[i];\n            if (this.faceVertexUvs[i] === undefined) {\n                this.faceVertexUvs[i] = [];\n            }\n            for (var j = 0, jl = faceVertexUvs.length; j < jl; j++) {\n                var uvs = faceVertexUvs[j], uvsCopy = [];\n                for (var k = 0, kl = uvs.length; k < kl; k++) {\n                    var uv = uvs[k];\n                    uvsCopy.push(uv.clone());\n                }\n                this.faceVertexUvs[i].push(uvsCopy);\n            }\n        }\n        // morph targets\n        var morphTargets = source.morphTargets;\n        for (var i = 0, il = morphTargets.length; i < il; i++) {\n            // const morphTarget = {};\n            // TODO: verify correctness\n            var morphTarget = {};\n            morphTarget.name = morphTargets[i].name;\n            // vertices\n            if (morphTargets[i].vertices !== undefined) {\n                morphTarget.vertices = [];\n                for (var j = 0, jl = morphTargets[i].vertices.length; j < jl; j++) {\n                    morphTarget.vertices.push(morphTargets[i].vertices[j].clone());\n                }\n            }\n            // normals\n            if (morphTargets[i].normals !== undefined) {\n                morphTarget.normals = [];\n                for (var j = 0, jl = morphTargets[i].normals.length; j < jl; j++) {\n                    morphTarget.normals.push(morphTargets[i].normals[j].clone());\n                }\n            }\n            this.morphTargets.push(morphTarget);\n        }\n        // morph normals\n        var morphNormals = source.morphNormals;\n        for (var i = 0, il = morphNormals.length; i < il; i++) {\n            var morphNormal = {};\n            // vertex normals\n            if (morphNormals[i].vertexNormals !== undefined) {\n                morphNormal.vertexNormals = [];\n                for (var j = 0, jl = morphNormals[i].vertexNormals.length; j < jl; j++) {\n                    var srcVertexNormal = morphNormals[i].vertexNormals[j];\n                    var destVertexNormal = {};\n                    destVertexNormal.a = srcVertexNormal.a.clone();\n                    destVertexNormal.b = srcVertexNormal.b.clone();\n                    destVertexNormal.c = srcVertexNormal.c.clone();\n                    morphNormal.vertexNormals.push(destVertexNormal);\n                }\n            }\n            // face normals\n            if (morphNormals[i].faceNormals !== undefined) {\n                morphNormal.faceNormals = [];\n                for (var j = 0, jl = morphNormals[i].faceNormals.length; j < jl; j++) {\n                    morphNormal.faceNormals.push(morphNormals[i].faceNormals[j].clone());\n                }\n            }\n            this.morphNormals.push(morphNormal);\n        }\n        // skin weights\n        var skinWeights = source.skinWeights;\n        for (var i = 0, il = skinWeights.length; i < il; i++) {\n            this.skinWeights.push(skinWeights[i].clone());\n        }\n        // skin indices\n        var skinIndices = source.skinIndices;\n        for (var i = 0, il = skinIndices.length; i < il; i++) {\n            this.skinIndices.push(skinIndices[i].clone());\n        }\n        // line distances\n        var lineDistances = source.lineDistances;\n        for (var i = 0, il = lineDistances.length; i < il; i++) {\n            this.lineDistances.push(lineDistances[i]);\n        }\n        // bounding box\n        var boundingBox = source.boundingBox;\n        if (boundingBox !== null) {\n            this.boundingBox = boundingBox.clone();\n        }\n        // bounding sphere\n        var boundingSphere = source.boundingSphere;\n        if (boundingSphere !== null) {\n            this.boundingSphere = boundingSphere.clone();\n        }\n        // update flags\n        this.elementsNeedUpdate = source.elementsNeedUpdate;\n        this.verticesNeedUpdate = source.verticesNeedUpdate;\n        this.uvsNeedUpdate = source.uvsNeedUpdate;\n        this.normalsNeedUpdate = source.normalsNeedUpdate;\n        this.colorsNeedUpdate = source.colorsNeedUpdate;\n        this.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\n        this.groupsNeedUpdate = source.groupsNeedUpdate;\n        return this;\n    };\n    Gmetry.prototype.toBufferGeometry = function () {\n        var geometry = new DirectGeometry_1.DirectGeometry().fromGeometry(this);\n        var buffergeometry = new three_1.BufferGeometry();\n        var positions = new Float32Array(geometry.vertices.length * 3);\n        buffergeometry.setAttribute('position', new three_1.BufferAttribute(positions, 3).copyVector3sArray(geometry.vertices));\n        if (geometry.normals.length > 0) {\n            var normals = new Float32Array(geometry.normals.length * 3);\n            buffergeometry.setAttribute('normal', new three_1.BufferAttribute(normals, 3).copyVector3sArray(geometry.normals));\n        }\n        if (geometry.colors.length > 0) {\n            var colors = new Float32Array(geometry.colors.length * 3);\n            buffergeometry.setAttribute('color', new three_1.BufferAttribute(colors, 3).copyColorsArray(geometry.colors));\n        }\n        if (geometry.uvs.length > 0) {\n            var uvs = new Float32Array(geometry.uvs.length * 2);\n            buffergeometry.setAttribute('uv', new three_1.BufferAttribute(uvs, 2).copyVector2sArray(geometry.uvs));\n        }\n        if (geometry.uvs2.length > 0) {\n            var uvs2 = new Float32Array(geometry.uvs2.length * 2);\n            buffergeometry.setAttribute('uv2', new three_1.BufferAttribute(uvs2, 2).copyVector2sArray(geometry.uvs2));\n        }\n        // groups\n        buffergeometry.groups = geometry.groups;\n        // morphs\n        for (var name_1 in geometry.morphTargets) {\n            var array = [];\n            var morphTargets = geometry.morphTargets[name_1];\n            for (var i = 0, l = morphTargets.length; i < l; i++) {\n                var morphTarget = morphTargets[i];\n                var attribute = new three_1.Float32BufferAttribute(morphTarget.data.length * 3, 3);\n                attribute.name = morphTarget.name;\n                array.push(attribute.copyVector3sArray(morphTarget.data));\n            }\n            buffergeometry.morphAttributes[name_1] = array;\n        }\n        // skinning\n        if (geometry.skinIndices.length > 0) {\n            var skinIndices = new three_1.Float32BufferAttribute(geometry.skinIndices.length * 4, 4);\n            buffergeometry.setAttribute('skinIndex', skinIndices.copyVector4sArray(geometry.skinIndices));\n        }\n        if (geometry.skinWeights.length > 0) {\n            var skinWeights = new three_1.Float32BufferAttribute(geometry.skinWeights.length * 4, 4);\n            buffergeometry.setAttribute('skinWeight', skinWeights.copyVector4sArray(geometry.skinWeights));\n        }\n        //\n        if (geometry.boundingSphere !== null) {\n            buffergeometry.boundingSphere = geometry.boundingSphere.clone();\n        }\n        if (geometry.boundingBox !== null) {\n            buffergeometry.boundingBox = geometry.boundingBox.clone();\n        }\n        return buffergeometry;\n    };\n    Gmetry.prototype.computeTangents = function () {\n        console.error('THREE.Geometry: .computeTangents() has been removed.');\n    };\n    Gmetry.prototype.computeLineDistances = function () {\n        console.error('THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.');\n    };\n    Gmetry.prototype.applyMatrix = function (matrix) {\n        console.warn('THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4().');\n        return this.applyMatrix4(matrix);\n    };\n    Gmetry.prototype.dispose = function () {\n        // This is not required when used outside of THREE.\n        // this.dispatchEvent( { type: 'dispose' } );\n    };\n    Gmetry.createBufferGeometryFromObject = function (object) {\n        var buffergeometry = new three_1.BufferGeometry();\n        var geometry = object.geometry;\n        if (object.isPoints || object.isLine) {\n            var positions = new three_1.Float32BufferAttribute(geometry.vertices.length * 3, 3);\n            var colors = new three_1.Float32BufferAttribute(geometry.colors.length * 3, 3);\n            buffergeometry.setAttribute('position', positions.copyVector3sArray(geometry.vertices));\n            buffergeometry.setAttribute('color', colors.copyColorsArray(geometry.colors));\n            if (geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length) {\n                var lineDistances = new three_1.Float32BufferAttribute(geometry.lineDistances.length, 1);\n                buffergeometry.setAttribute('lineDistance', lineDistances.copyArray(geometry.lineDistances));\n            }\n            if (geometry.boundingSphere !== null) {\n                buffergeometry.boundingSphere = geometry.boundingSphere.clone();\n            }\n            if (geometry.boundingBox !== null) {\n                buffergeometry.boundingBox = geometry.boundingBox.clone();\n            }\n        }\n        else if (object.isMesh) {\n            buffergeometry = geometry.toBufferGeometry();\n        }\n        return buffergeometry;\n    };\n    return Gmetry;\n}());\nexports.Gmetry = Gmetry;\n// Gmetry.prototype.isGeometry = true;\n//# sourceMappingURL=Gmetry.js.map","// Expose all your components to the global scope here.\n\nglobalThis.ThreeGeometryHellfix = globalThis.TGH = require(\"./\").ThreeGeometryHellfix;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./DirectGeometry\"), exports);\n__exportStar(require(\"./Face3\"), exports);\n__exportStar(require(\"./Gmetry\"), exports);\n__exportStar(require(\"./interfaces\"), exports);\n__exportStar(require(\"./mylibrary\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=interfaces.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ThreeGeometryHellfix = void 0;\nvar DirectGeometry_1 = require(\"./DirectGeometry\");\nvar Face3_1 = require(\"./Face3\");\nvar Gmetry_1 = require(\"./Gmetry\");\nexports.ThreeGeometryHellfix = {\n    DirectGeometry: DirectGeometry_1.DirectGeometry,\n    Face3: Face3_1.Face3,\n    Gmetry: Gmetry_1.Gmetry\n};\n//# sourceMappingURL=mylibrary.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkthree_geometry_hellfix\"] = self[\"webpackChunkthree_geometry_hellfix\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [736], () => (__webpack_require__(333)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","Object","defineProperty","exports","value","DirectGeometry","three_1","this","vertices","normals","colors","uvs","uvs2","groups","morphTargets","position","normal","skinWeights","skinIndices","boundingBox","boundingSphere","verticesNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","uvsNeedUpdate","groupsNeedUpdate","prototype","computeGroups","geometry","group","i","materialIndex","undefined","faces","length","face","count","start","push","fromGeometry","morphTargetsPosition","faceVertexUvs","hasFaceVertexUv","hasFaceVertexUv2","morphTargetsLength","name","data","morphTargetsNormal","morphNormals","morphNormalsLength","hasSkinIndices","hasSkinWeights","console","error","a","b","c","vertexNormals","vertexUvs","vertexColors","color","warn","Vector2","j","morphTarget","morphNormal","clone","Face3","Vector3","isVector3","Array","isArray","Color","isColor","copy","source","il","Gmetry","DirectGeometry_1","Face3_1","_m1","Matrix4","_obj","Object3D","_offset","uuid","MathUtils","generateUUID","type","lineDistances","elementsNeedUpdate","lineDistancesNeedUpdate","isGeometry","applyMatrix4","matrix","normalMatrix","Matrix3","getNormalMatrix","applyMatrix3","normalize","jl","computeBoundingBox","computeBoundingSphere","rotateX","angle","makeRotationX","rotateY","makeRotationY","rotateZ","makeRotationZ","translate","x","y","z","makeTranslation","scale","makeScale","lookAt","vector","updateMatrix","fromBufferGeometry","scope","index","attributes","uv","uv2","fromBufferAttribute","addFace","getX","computeFaceNormals","center","getCenter","negate","radius","s","set","cb","ab","f","fl","vA","vB","vC","subVectors","cross","computeVertexNormals","areaWeighted","v","vl","add","computeFlatVertexNormals","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","dstNormalsFace","dstNormalsVertex","faceNormal","Box3","setFromPoints","Sphere","merge","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","colors1","colors2","vertexCopy","faceVertexNormals","faceVertexColors","faceCopy","faceVertexUvs2","uvsCopy","k","kl","mergeMesh","mesh","isMesh","matrixAutoUpdate","mergeVertices","precisionPoints","verticesMap","unique","changes","precision","Math","pow","key","round","faceIndicesToRemove","indices","n","idx","splice","diff","points","l","point","sortFacesByMaterialIndex","_id","sort","newUvs1","newUvs2","uvs1","id","toJSON","metadata","version","generator","parameters","vertex","normalsHash","colorsHash","uvsHash","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","r","g","hasFaceVertexColor","faceType","setBit","getUvIndex","getNormalIndex","getColorIndex","enabled","hash","toString","getHex","srcVertexNormal","destVertexNormal","toBufferGeometry","buffergeometry","BufferGeometry","positions","Float32Array","setAttribute","BufferAttribute","copyVector3sArray","copyColorsArray","copyVector2sArray","name_1","array","attribute","Float32BufferAttribute","morphAttributes","copyVector4sArray","computeTangents","computeLineDistances","applyMatrix","dispose","createBufferGeometryFromObject","object","isPoints","isLine","copyArray","globalThis","ThreeGeometryHellfix","TGH","__createBinding","create","o","m","k2","enumerable","get","__exportStar","p","hasOwnProperty","call","Gmetry_1","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","keys","every","obj","prop","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}